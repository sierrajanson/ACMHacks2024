{"version":3,"file":"static/js/7814.71d5cd1f.chunk.js","mappings":"+NAIoMA,eAAeC,EAAEC,EAAED,EAAEE,GAAG,MAAMC,GAAEC,EAAAA,EAAAA,IAAEH,GAAGI,EAAEL,EAAEM,SAASN,EAAEO,gBAAgBF,EAAEE,cAAcC,KAAKC,UAAUT,EAAEO,gBAAgB,MAAMG,EAAE,IAAIL,EAAEM,aAAY,EAAGC,EAAE,QAAQC,GAAEC,EAAAA,EAAAA,IAAE,IAAIX,EAAEY,SAASL,IAAIM,GAAEC,EAAAA,EAAAA,IAAEJ,EAAE,IAAIX,EAAEgB,OAAO,SAASC,EAAE,GAAGhB,EAAEiB,gCAAgCC,KAAKC,SAASC,EAAAA,EAAAA,GAAEJ,EAAEH,GAAGQ,EAAEC,EAAAA,EAAEC,SAASJ,GAAG,OAAOE,EAAEG,aAAaH,EAAEG,cAAcC,KAAKL,IAAC,CAAIM,QAAQN,EAAEO,GAAGC,eAAeR,EAAEQ,oBAAoB,GAAGP,CAAC,CAACzB,eAAeG,EAAEuB,EAAEzB,EAAEE,GAAG,IAAIF,EAAEgC,WAAW,MAAM,IAAI/B,EAAAA,EAAE,2DAA2D,sBAAsB,MAAME,GAAEC,EAAAA,EAAAA,IAAEqB,GAAGpB,EAAEL,EAAEM,SAASN,EAAEO,gBAAgBF,EAAEE,cAAcC,KAAKC,UAAUT,EAAEO,gBAAgB,MAAMG,GAAEO,EAAAA,EAAAA,IAAEd,EAAEY,MAAM,CAACA,OAAMD,EAAAA,EAAAA,IAAE,IAAIT,EAAEM,aAAY,EAAGZ,OAAM,EAAGa,EAAE,YAAYV,EAAEgB,OAAO,SAASL,EAAE,GAAGV,EAAEiB,gCAAgCC,KAAKL,SAASO,EAAAA,EAAAA,GAAEV,EAAEH,GAAG,OAAOM,EAAEA,EAAEiB,UAAU,IAAI,C","sources":["../node_modules/@arcgis/core/rest/networks/validateNetworkTopology.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport t from\"../../request.js\";import o from\"../../core/Error.js\";import{parseUrl as i,encode as e,asValidOptions as r}from\"../utils.js\";import s from\"./support/ValidateNetworkTopologyResult.js\";async function a(o,a,n){const d=i(o),l=a.toJSON();a.validationSet&&(l.validationSet=JSON.stringify(a.validationSet));const u={...l,returnEdits:!0,f:\"json\"},p=e({...d.query,...u}),m=r(p,{...n,method:\"post\"}),v=`${d.path}/validateNetworkTopology`,{data:y}=await t(v,m),c=s.fromJSON(y);return c.serviceEdits=c.serviceEdits?.map((t=>({layerId:t.id,editedFeatures:t.editedFeatures})))??[],c}async function n(s,a,n){if(!a.gdbVersion)throw new o(\"submit-validate-network-topology-job:missing-gdb-version\",\"version is missing\");const d=i(s),l=a.toJSON();a.validationSet&&(l.validationSet=JSON.stringify(a.validationSet));const u=r(d.query,{query:e({...l,returnEdits:!0,async:!0,f:\"json\"}),...n,method:\"post\"}),p=`${d.path}/validateNetworkTopology`,{data:m}=await t(p,u);return m?m.statusUrl:null}export{n as submitValidateNetworkTopologyJob,a as validateNetworkTopology};\n"],"names":["async","a","o","n","d","i","l","toJSON","validationSet","JSON","stringify","u","returnEdits","f","p","e","query","m","r","method","v","path","data","y","t","c","s","fromJSON","serviceEdits","map","layerId","id","editedFeatures","gdbVersion","statusUrl"],"sourceRoot":""}