{"version":3,"file":"static/js/4621.0c710975.chunk.js","mappings":";sRA0BO,MAAMA,EAAqB,IAAIC,IAEhCC,EAAY,CAChBC,MAAO,EACPC,MAAO,EACPC,KAAM,EACNC,KAAM,EACNC,MAAO,EACPC,IAAK,IAOP,SAASC,EAAiBC,GACxB,IALF,SAAiBA,GACf,OAAOR,EAAUQ,IAAUR,EAAUS,EAAAA,EACvC,CAGOC,CAAQF,GACX,OAI2F,QAAAG,EAAAC,UAAAC,OANjDC,EAAW,IAAAC,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAXF,EAAWE,EAAA,GAAAJ,UAAAI,GAQvDC,QAAQT,GAAOU,KAAKC,KAHE,YACH,6EAEqCL,EAC1D,CAEA,IAAIM,QAESC,EAAS,CACpBnB,MAAQoB,GAAqBf,EAAiB,QAASe,GACvDnB,KAAOmB,GAAqBf,EAAiB,OAAQe,GACrDlB,KAAOkB,GAAqBf,EAAiB,OAAQe,GACrDjB,MAAQiB,GAAqBf,EAAiB,QAASe,GACvDrB,MAAQqB,GAAqBf,EAAiB,QAASe,GAEvDC,WAWF,SACEC,EAA0BC,GACkE,IAA5F,UAAEC,EAAS,KAAEC,EAAI,UAAEC,EAAS,eAAEC,GAA8DJ,EAE5F,MAAMK,EAAM,GAAGN,KAAuB,cAAZA,EAA0B,GAAKE,IAAYC,IAErE,GAAI7B,EAAmBiC,IAAID,GACzB,OAGFhC,EAAmBkC,IAAIF,GAEvB,MAAMG,EAAmBlB,MAAMmB,QAAQN,GAEnCK,IAAqBb,IACvBA,EAAgB,IAAIe,KAAKC,WAAW,KAAM,CAAEC,MAAO,OAAQC,KAAM,iBAKnE/B,EAAiB,OAFD,IAAIoB,MAASH,0CAAmE,WAAnBK,EAA8B,mBAAqB,IAAIA,OAAoBD,EAAY,QAAQK,EAAmBb,EAAcmB,OAAOX,EAAUY,KAAKC,GAAe,IAAIA,QAAkB,IAAIb,gBAA0B,KAGxS,wCC7FO,MAAMc,EACJ,QADIA,EAEJ,QAFIA,EAGH,SAHGA,EAIH,SAJGA,EAKJ,QALIA,EAML,OANKA,EAOJ,QAPIA,EAQA,YARAA,EASF,UATEA,EAUA,YAVAA,EAWI,kBAXJA,EAYQ,sBAZRA,EAaF,UAbEA,EAcM,qBAdNA,EAeI,iBAfJA,EAgBC,cAhBDA,EAoBE,sBApBFA,EAqBI,wBArBJA,EAsBE,sBAtBFA,EAuBI,wBAUJC,EACJ,IAGIC,EACF,UADEA,EAEI,iBAFJA,EAGC,cAHDA,EAIH,SAJGA,EAKL,OALKA,EAMA,YANAA,EAOF,UCWX,IAAIC,EAA0B,EAC1BC,EAAuC,GAE3CzB,EAAOE,WAAW,YAAa,CAC7BI,KAAM,QACNE,eAAgB,EAChBD,UAAW,iBAmBAmB,GAAKC,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,yUAgRhB,KAAAC,kBAAmB,EAMX,KAAAC,kBAAqCC,EAAAA,EAAAA,GAAe,YAAY,IACtEjC,KAAKkC,2BAGC,KAAAC,gBAAmCF,EAAAA,EAAAA,GAAe,YAAY,KACpEjC,KAAKoC,mBAAmB,IAK1B,KAAAC,mBAAqB,UA4Gb,KAAAC,gBAAmBC,IACzBvC,KAAKwC,aAAeD,CAAE,EA6ChB,KAAAE,QAAU,KAChBzC,KAAK0C,WACL1C,KAAKuC,GAAGI,oBAAoB,mBAAoB3C,KAAKyC,QAAQ,EAGvD,KAAAG,iBAAmB,KACzB5C,KAAK6C,MAAO,CAAK,EAwBX,KAAAC,mBAAqB,KACvB9C,KAAK+C,uBAIT/C,KAAK6C,MAAO,EAAK,EAGnB,KAAAG,WAAaC,UACX,GAAIjD,KAAKkD,YACP,UACQlD,KAAKkD,YAAYlD,KAAKuC,IAC5B,MAAOY,GAOP,YALAC,uBAAsB,KACpBpD,KAAK+B,kBAAmB,EACxB/B,KAAK6C,MAAO,EACZ7C,KAAK+B,kBAAmB,CAAK,IAMnCL,IACA1B,KAAKqD,QAAS,EACdrD,KAAKsD,2BAA2B,EAO1B,KAAApB,uBAAyB,KAC/BlC,KAAKuD,yBACLvD,KAAKwD,yBAAyB,EAGxB,KAAAD,uBAAyB,KAC/BvD,KAAKyD,aAAcC,EAAAA,EAAAA,GAAW1D,KAAKuC,GAAI,CAACd,EAAYA,EAAeA,GAAiB,EAG9E,KAAAW,kBAAoB,KAC1BpC,KAAK2D,SAAWC,iBAAiB5D,KAAKuC,IAAIsB,iBAAiB,yBAC3D7D,KAAK8D,UAAYF,iBAAiB5D,KAAKuC,IAAIsB,iBAAiB,yBAAyB,EAG/E,KAAAE,4BAA+BC,IACrChE,KAAKiE,eAAgBC,EAAAA,EAAAA,GAA6BF,EAAM,EAGlD,KAAAG,+BAAkCH,IACxChE,KAAKoE,kBAAmBF,EAAAA,EAAAA,GAA6BF,EAAM,aA3fd,eAOE,oDAMF,0BAKF,6BAYG,oCAWZ,uBAGM,aAGF,oBAGK,yJA4OxB,sBAEI,yBAEG,0DA7Q5BK,uBAAAA,CAAwBC,GACjBtE,KAAK6C,OAIVyB,GAAoBC,EAAAA,EAAAA,GAAoBvE,OAAQwE,EAAAA,EAAAA,GAAkBxE,OA+CpEyE,gBAAAA,IAUA,uBAAMC,SACEC,EAAAA,EAAAA,GAAc3E,OACpB4E,EAAAA,EAAAA,GAAuB5E,MAEnBA,KAAK6C,MACP7C,KAAK6E,YAITC,gBAAAA,IACEC,EAAAA,EAAAA,GAAmB/E,MAGrBgF,iBAAAA,GACEhF,KAAKgC,kBAAkBiD,QAAQjF,KAAKuC,GAAI,CAAE2C,WAAW,EAAMC,SAAS,IACpEnF,KAAKmC,gBAAgB8C,QAAQjF,KAAKuC,GAAI,CAAE6C,gBAAiB,CAAC,WAC1DpF,KAAKoC,oBACLpC,KAAKuD,0BACL8B,EAAAA,EAAAA,GAAgCrF,OAChCsF,EAAAA,EAAAA,GAAiBtF,OACjBuF,EAAAA,EAAAA,GAAgBvF,OAChBwF,EAAAA,EAAAA,GAAiBxF,MAGnByF,oBAAAA,GACEzF,KAAKsD,4BACLtD,KAAKgC,kBAAkB0D,aACvB1F,KAAKmC,gBAAgBuD,cACrBC,EAAAA,EAAAA,GAAmC3F,OACnCuE,EAAAA,EAAAA,GAAoBvE,OACpB4F,EAAAA,EAAAA,GAAoB5F,OACpB6F,EAAAA,EAAAA,GAAmB7F,MACnBA,KAAK8F,UAAW,EAGlBC,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAACC,EAAAA,GAAI,CAAAtF,IAAA,8DACeX,KAAKkG,UAAS,kBACflG,KAAKmG,QAAO,aAClB,OACXC,KAAK,WAELJ,EAAAA,EAAAA,GAAA,OAAArF,IAAA,2CACE0F,MAAO,CACL,CAAC9E,IAAgB,EACjB,CAACA,GAAoBvB,KAAKqD,OAC1B,CAAC9B,GAAwBvB,KAAK8F,YAGhCE,EAAAA,EAAAA,GAAA,iBAAArF,IAAA,2CAAe0F,MAAO9E,EAAW+E,QAAStG,KAAK8C,qBAC9C9C,KAAKuG,eACNP,EAAAA,EAAAA,GAAA,OAAArF,IAAA,2CACE0F,MAAO,CACL,CAAC9E,IAAY,GAEfiF,IAAKxG,KAAKsC,kBAEV0D,EAAAA,EAAAA,GAAA,OAAArF,IAAA,2CAAK0F,MAAO9E,GACTvB,KAAKyG,qBACNT,EAAAA,EAAAA,GAAA,UAAArF,IAAA,2CAAQ0F,MAAO9E,IACbyE,EAAAA,EAAAA,GAAA,QAAArF,IAAA,2CAAMH,KAAMe,MAGfvB,KAAK0G,oBACNV,EAAAA,EAAAA,GAAA,OAAArF,IAAA,2CACE0F,MAAO,CACL,CAAC9E,IAAc,EACf,CAACA,IAAuBvB,KAAKyD,WAE/B+C,IAAMjE,GAAQvC,KAAK2G,aAAepE,IAElCyD,EAAAA,EAAAA,GAAA,QAAArF,IAAA,2CAAMH,KAAMiB,KAEbzB,KAAK4G,sBACL5G,KAAK6G,kBAOhBA,YAAAA,GACE,OAAO7G,KAAKyD,WACVuC,EAAAA,EAAAA,GAAA,OAAKK,MAAO9E,EAAYZ,IAAI,WAC1BqF,EAAAA,EAAAA,GAAA,QAAMK,MAAO9E,IACXyE,EAAAA,EAAAA,GAAA,QAAMxF,KAAMiB,MAEduE,EAAAA,EAAAA,GAAA,QAAMK,MAAO9E,IACXyE,EAAAA,EAAAA,GAAA,QAAMxF,KAAMiB,MAEduE,EAAAA,EAAAA,GAAA,QAAMK,MAAO9E,IACXyE,EAAAA,EAAAA,GAAA,QAAMxF,KAAMiB,MAGd,KAGNiF,gBAAAA,GACE,OACEV,EAAAA,EAAAA,GAAA,OAAKK,MAAO9E,EAAgBuF,QAAS9G,KAAKiE,gBACxC+B,EAAAA,EAAAA,GAAA,QAAMxF,KAAMiB,EAAkBsF,aAAc/G,KAAK+D,+BAKvD6C,mBAAAA,GACE,OACEZ,EAAAA,EAAAA,GAAA,OAAKK,MAAO9E,EAAmBuF,QAAS9G,KAAKoE,mBAC3C4B,EAAAA,EAAAA,GAAA,QAAMxF,KAAMiB,EAAqBsF,aAAc/G,KAAKmE,kCAK1DsC,iBAAAA,GACE,OAAQzG,KAAKgH,oBAWT,MAVFhB,EAAAA,EAAAA,GAAA,uBACchG,KAAKiH,SAASC,MAC1Bb,MAAO9E,EACPZ,IAAI,SACJ2F,QAAStG,KAAK4C,iBACd4D,IAAMjE,GAAQvC,KAAKmH,cAAgB5E,EACnC6E,MAAOpH,KAAKiH,SAASC,QAErBlB,EAAAA,EAAAA,GAAA,gBAAcqB,KAAM7F,EAAa8F,OAAOC,EAAAA,EAAAA,GAAavH,KAAKsH,UAKhEf,WAAAA,GACE,IAAKvG,KAAKwH,aAAexH,KAAK2D,UAAY3D,KAAK8D,WAC7C,OACEkC,EAAAA,EAAAA,GAAA,aACG,IAAIzE,sBACCvB,KAAKyH,QAAUzH,KAAK2D,SAAW,kCAAoC,mCAEpEpC,kCACavB,KAAK8D,UAAY9D,KAAK8D,UAAY,qCAC9C9D,KAAK2D,SAAW,gBAAgB3D,KAAK2D,uBAAyB,qBAC9D3D,KAAK2D,SAAW,oBAAoB3D,KAAK2D,uBAAyB,qBAClE3D,KAAKyH,OAAS,0DAA4D,gEAE9CzH,KAAK2D,+BAChCpC,wBACCvB,KAAKyH,OAAS,oCAAsC,uCAErDlG,sQAMEvB,KAAKyH,OAA0C,GAAjC,mDACdzH,KAAKyH,OAA0C,GAAjC,mDAEfzH,KAAKyH,OACD,2FACA,kDAuDpBC,qBAAAA,IACEC,EAAAA,EAAAA,GAAe3H,KAAMA,KAAK4H,iBAY5BC,YAAAA,CAAa7D,IACPhE,KAAK6C,MAAS7C,KAAK8H,gBAAgC,WAAd9D,EAAMrD,KAAqBqD,EAAM+D,mBACxE/H,KAAK6C,MAAO,EACZmB,EAAMgE,kBAgCV,cAAMtF,SACEuF,EAAAA,EAAAA,GAAmBjI,OACzBkI,EAAAA,EAAAA,GAAmBlI,KAAKuC,IAO1B,6BAAMiB,IACJA,EAAAA,EAAAA,GAAwBxD,MAU1B,mBAAMmI,GAA+B,IAAjBC,EAAG3I,UAAAC,OAAA,QAAA2I,IAAA5I,UAAA,GAAAA,UAAA,GAAG,EAAG6I,EAAI7I,UAAAC,OAAA,QAAA2I,IAAA5I,UAAA,GAAAA,UAAA,GAAG,EAC9BO,KAAK2G,eACH3G,KAAK2G,aAAa4B,SACpBvI,KAAK2G,aAAa4B,SAAS,CAAEH,MAAKE,OAAME,SAAU,YAElDxI,KAAK2G,aAAa8B,UAAYL,EAC9BpI,KAAK2G,aAAa+B,WAAaJ,IAerCK,YAAAA,GACE3I,KAAKwC,aAAaoG,UAAU/H,IAAIU,GAChCvB,KAAK6I,uBAAuBC,OAG9BC,MAAAA,GACE/I,KAAKwC,aAAaoG,UAAUI,OAAOzH,EAAiBA,GACpDvB,KAAKiJ,iBAAiBH,QACtBtE,EAAAA,EAAAA,GAAkBxE,MAGpBkJ,aAAAA,GACElJ,KAAKwC,aAAaoG,UAAU/H,IAAIU,GAChCvB,KAAKmJ,wBAAwBL,OAG/BM,OAAAA,GACEpJ,KAAKwC,aAAaoG,UAAUI,OAAOzH,EAAiBA,GACpDvB,KAAKqJ,kBAAkBP,QACvBvE,EAAAA,EAAAA,GAAoBvE,MAItBsJ,WAAAA,CAAYC,GACNvJ,KAAK+B,mBAILwH,EACFvJ,KAAK6E,YAEL7E,KAAKgD,cAKTwG,kBAAAA,CAAmBD,GACjB,MAAME,EAAYF,EAAQhI,EAAkBA,EAC5CvB,KAAKwC,aAAaoG,UAAU/H,IAAI4I,IAChCC,EAAAA,EAAAA,GAA2B1J,MAYrB,eAAM6E,SACN8E,EAAAA,EAAAA,GAAiB3J,KAAKuC,IAC5BvC,KAAKuC,GAAGqH,iBAAiB,mBAAoB5J,KAAKyC,SAClDzC,KAAKqD,QAAS,EACd,MAAMwG,GAAUnG,EAAAA,EAAAA,GAAW1D,KAAKuC,GAAId,GAC9BqI,GAAYpG,EAAAA,EAAAA,GAAW1D,KAAKuC,GAAId,GAEtCzB,KAAKmG,SAAU4D,EAAAA,EAAAA,GAASF,GACxB7J,KAAKkG,WAAY6D,EAAAA,EAAAA,GAASD,GAErB9J,KAAK8F,WACgB,IAApBpE,IACFC,EAA+BqI,SAASC,gBAAgB/I,MAAMgJ,UAGhExI,IAEAsI,SAASC,gBAAgB/I,MAAMiJ,YAAY,WAAY,WAgCnD7G,yBAAAA,GACN0G,SAASC,gBAAgB/I,MAAMiJ,YAAY,WAAYxI,ySCrkB1C,gtXCGD4F,EAAa6C,GAC3B,MAA0B,MAAnBA,EAAyB,IAAM,GACxC,CASOnH,eAAe0G,EAAiBpH,SAMvC,SAAqBA,GACnB,MAA8D,oBAA/CA,EAA0BoH,gBAC3C,CAPSU,CAAY9H,GACfA,EAAGoH,mBACH,IAAIW,SAAeC,GAAYnH,uBAAsB,IAAMmH,QACjE,6FCCA,IAAIvI,EACJ,MAAMwI,EAAiF,CAAEtF,WAAW,YAYpFG,EAAgC9E,GACzCyB,IACHA,GAAmBC,EAAAA,EAAAA,GAAe,WAAYwI,IAGhDzI,EAAiBiD,QAAQ1E,EAAUgC,GAAIiI,EACzC,UAYgB7E,EAAmCpF,GACjDyB,EAAiB0I,UAAUnK,EAAUgC,GACvC,CAEA,SAASkI,EAAiBE,GACxBA,EAAUC,SAAQtK,IAAW,IAAV,OAAEuK,GAAQvK,GAC3BwK,EAAAA,EAAAA,IAAYD,EAAO,GAEvB,2FC1DO,MAAMtJ,EAEF,WCcEwJ,EAA6C,CAAC,EAQ9CC,EAAyD,CAAC,EAE1DC,EAAmC,CAC9CC,EAAG,GACHC,EAAG,GACHC,EAAG,IAGL,SAASC,EAAc/K,GAAgC,IAA/B,KAAE+G,EAAI,MAAEC,GAAuBhH,EACrD,MAAMgL,EAAOL,EAAU3D,GACjB9G,WAkD0BA,GAChC,MAAM+K,GAAqBC,MAAMC,OAAOjL,EAAKkL,OAAO,KAC9CC,EAAQnL,EAAKoL,MAAM,KAGzB,GAFmBD,EAAMjM,OAAS,EAElB,CACd,MAAMmM,EAA6B,SAEnCrL,EAAOmL,EACJtK,KAAI,CAACyK,EAAMC,IACHD,EAAKE,QAAQH,GAA4B,SAAkBI,EAAOC,GAGvE,OAFwC,IAAdH,GAA8B,IAAXG,EAGpCD,EAGFA,EAAME,mBAGhBC,KAAK,IAGV,OAAOb,EAAoB,IAAI/K,IAASA,CAC1C,CA1Ee6L,CAAkBhF,GACzBiF,EAA0C,MAAjC9L,EAAKkL,OAAOlL,EAAKd,OAAS,GAGzC,MAAO,GAFU4M,EAAS9L,EAAK+L,UAAU,EAAG/L,EAAKd,OAAS,GAAKc,IAE1C8K,IAAOgB,EAAS,IAAM,IAC7C,CAkCA,SAASE,EAAuBC,GAC9B,OAAO1B,EAAU0B,EACnB,CC3EA,MCgBaC,GAAI7K,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,+EAeU,mBAQf,aAQK,6DAgFG,EAhElBkD,iBAAAA,GACOhF,KAAK2M,SACR3M,KAAK4M,kBAAiB,KACpB5M,KAAK2M,SAAU,EACf3M,KAAK6M,kBAAkB,IAK7BpH,oBAAAA,GACEzF,KAAK8M,sBAAsBpH,aAC3B1F,KAAK8M,qBAAuB,KAG9B/G,MAAAA,GACE,MAAM,GAAExD,EAAE,QAAEwK,EAAO,SAAEC,EAAQ,MAAE1F,EAAK,UAAE2F,GAAcjN,KAC9CkN,GAAMC,EAAAA,EAAAA,GAAc5K,GACpB+I,EAAOL,EAAU3D,GACjB8F,IAAaH,EACbI,EAAQ,GAAGC,OAAON,GAAY,IACpC,OACEhH,EAAAA,EAAAA,GAACC,EAAAA,GAAI,CAAAtF,IAAA,0DACU4M,EAAAA,EAAAA,IAAeH,GAAS,aACzBA,EAAWH,EAAY,KACnC7G,KAAMgH,EAAW,MAAQ,OAEzBpH,EAAAA,EAAAA,GAAA,OAAArF,IAAA,yDACc,OACZ0F,MAAO,CACL,CAAC9E,GAAsB,QAAR2L,GAAiBH,EAChCS,KAAK,GAEPC,KAAK,eACLC,OAAO,OACPC,QAAS,OAAOrC,KAAQA,IACxBsC,MAAM,OACNC,MAAM,8BAELR,EAAMhM,KAAKyM,GACM,kBAATA,GACL9H,EAAAA,EAAAA,GAAA,QAAM+H,EAAGD,KAET9H,EAAAA,EAAAA,GAAA,QAAM+H,EAAGD,EAAKC,EAAGC,QAAS,YAAaF,EAAOA,EAAKE,QAAU,QAgCjE,sBAAMnB,GACZ,MAAM,KAAExF,EAAI,MAAEC,EAAK,QAAEqF,GAAY3M,KAEjC,KAAKiO,EAAAA,EAAAA,OAAgB5G,IAASsF,EAC5B,OAGF,MAAMuB,EAAiB,CAAE7G,OAAMC,SACzB0F,EF3EDR,EAAuBnB,EE2EO6C,WFxGhCjL,eAAyBkL,GAC9B,MAAMC,EAAgB/C,EAAe8C,GAC/BE,EAAiB7B,EAAuB4B,GAE9C,GAAIC,EACF,OAAOA,EAGJrD,EAAaoD,KAChBpD,EAAaoD,GAAiBE,OAAMC,EAAAA,EAAAA,IAAa,iBAAiBH,WAC/DI,MAAMC,GAASA,EAAKC,SACpBC,OAAM,KACL7O,QAAQZ,MAAM,IAAIkP,0CACX,OAIb,MAAMN,QAAa9C,EAAaoD,GAGhC,OAFArD,EAAUqD,GAAiBN,EAEpBA,CACT,CEmFiEc,CAAUV,GAGnE7G,IAASrH,KAAKqH,OAIlBrH,KAAKgN,SAAWA,GAGVJ,gBAAAA,CAAiBiC,GACvB7O,KAAK8M,sBAAuB7K,EAAAA,EAAAA,GAC1B,gBACC6M,IACCA,EAAQlE,SAASmE,IACXA,EAAMC,iBACRhP,KAAK8M,qBAAqBpH,aAC1B1F,KAAK8M,qBAAuB,KAC5B+B,OAEF,GAEJ,CAAEI,WAAY,SAGXjP,KAAK8M,qBAKV9M,KAAK8M,qBAAqB7H,QAAQjF,KAAKuC,IAJrCsM,8KD3KU,+4BE2DhB,MAAMK,EAAa,IAAIC,QAEjBC,EAAa,IAAID,iBAePvK,EAAuBrE,GACrC6O,EAAWC,IAAI9O,EAAW,IAAI+J,SAASC,GAAY2E,EAAWG,IAAI9O,EAAWgK,KAC/E,UAegBxF,EAAmBxE,GACjC2O,EAAWI,IAAI/O,EAAf2O,EACF,CAuCOjM,eAAegF,EAAmB1H,GAGvC,kBAxB8BA,GAC9B,OAAO6O,EAAWE,IAAI/O,EACxB,CAoBQgP,CAAgBhP,IAEjB0N,EAAAA,EAAAA,KAKL,OADAnD,EAAAA,EAAAA,IAAYvK,GACL,IAAI+J,SAASC,GAAYnH,uBAAsB,IAAMmH,OAC9D,iFC/IO,MAAMhJ,EAAM,CACjBiO,OAAQ,SACRC,YAAa,eACbC,WAAY,cACZC,aAAeC,GAAmB,GAAGrO,EAAImO,eAAeE,IACxDC,WAAY,eACZC,iBAAkB,sBCKPC,GAAMlO,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,qEA6GT,KAAAkO,YAAc,IACF,sBAAdhQ,KAAKmB,KACA,GAAGnB,KAAKuJ,QAGVvJ,KAAKiQ,UAAU7O,OAAOpB,KAAKuJ,MAAQ,oBAtGO,eAGjB,+BAMM,cAStC,2BAGc,YAQD,wBAoFY,GAzF3B2G,kBAAAA,GACElQ,KAAKmQ,SAAWnQ,KAAKmB,KAAKiP,WAAW,gBAAiC,MAAfpQ,KAAKuJ,MAY9DvE,iBAAAA,IACEM,EAAAA,EAAAA,GAAiBtF,MAEjBA,KAAKqQ,kBAGP5K,oBAAAA,IACEG,EAAAA,EAAAA,GAAoB5F,MAGtB0E,iBAAAA,GACEtB,uBAAsB,IAAMpD,KAAKkQ,uBAGnCnK,MAAAA,GACE,MAAM,GAAExD,EAAE,OAAE+N,EAAM,MAAEC,EAAK,MAAEjJ,EAAK,KAAEkJ,EAAI,KAAErP,EAAI,MAAEoI,GAAUvJ,KAElDyM,EAAKlK,EAAGkK,KAAMgE,EAAAA,EAAAA,KAEdnF,EAAOgF,EAAStQ,KAAK0Q,cAAcpJ,GAAStH,KAAK2Q,QAAQrJ,GACzDsJ,EAFc,IAELtF,EACTuF,EAAU,OAAOvF,KAAQA,IACzBwF,EAAgB3P,EAAKiP,WAAW,eAChCW,EAAgB,EAAIH,EAASI,KAAKC,GAClCC,EAAY3H,EAAQ,IAAOwH,EAC3BI,EAAYJ,EAAgBG,EAC5BE,EAAWJ,KAAKK,MAAM9H,GACtB+H,EAAmB,CAAE,mBAAoB,GAAGJ,KAAYC,KAE9D,OACEnL,EAAAA,EAAAA,GAACC,EAAAA,GAAI,CAAAtF,IAAA,wDACS4P,EAAK,gBACFO,EAAgB,WAAQzI,EAAS,gBACjCyI,EAAgB,SAAMzI,EAAS,gBAC/ByI,EAAgBM,EAASG,gBAAalJ,EACrDoE,GAAIA,EACJrG,KAAK,gBAELJ,EAAAA,EAAAA,GAAA,OAAArF,IAAA,2CAAK0F,MAAO9E,EAAIkO,aACb,CAAC,EAAG,EAAG,GAAGpO,KAAKmQ,IACdxL,EAAAA,EAAAA,GAAA,qBACc,OACZK,MAAO,CACL,CAAC9E,EAAImO,aAAa,EAClB,CAACnO,EAAIoO,aAAa6B,KAAS,GAE7B7Q,IAAK6Q,EACLtQ,MAAO4P,GAA2B,IAAVU,EAAcF,OAAmBjJ,EACzDsF,QAASkD,IAET7K,EAAAA,EAAAA,GAAA,UAAQyL,GAAInG,EAAO,EAAGoG,GAAIpG,EAAO,EAAGqG,EAAGf,OAG1CE,IAAiB9K,EAAAA,EAAAA,GAAA,OAAArF,IAAA,2CAAK0F,MAAO9E,EAAIuO,kBAAmB9P,KAAKgQ,gBAE3DQ,IAAQxK,EAAAA,EAAAA,GAAA,OAAArF,IAAA,2CAAK0F,MAAO9E,EAAIsO,YAAaW,IAyB5CoB,oBAAAA,GACE5R,KAAKqQ,kBAgBCM,OAAAA,CAAQrJ,GACd,MAAO,CACL4D,EAAG,GACHC,EAAG,GACHC,EAAG,IACH9D,GAGIoJ,aAAAA,CAAcpJ,GACpB,MAAO,CACL4D,EAAG,GACHC,EAAG,GACHC,EAAG,IACH9D,GAGI+I,eAAAA,GAEU,sBAAdrQ,KAAKmB,MACLnB,KAAKiQ,WAAW4B,kBAAkBC,SAAW9R,KAAK4H,kBAKpD5H,KAAKiQ,UAAY,IAAIjP,KAAK+Q,aAAa/R,KAAK4H,gBAAiB,CAC3D1G,MAAO,6LCtLK,ioNCAX,MAAMK,EACJ,QADIA,EAEF,UAGEyQ,EACR,GADQA,EAGR,ICgBQC,GAAKpQ,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,qEAuChB,KAAAoQ,gBAAiBjQ,EAAAA,EAAAA,GAAe,UAAU,IAAMjC,KAAKmS,iBAsE7C,KAAAC,wBAA2BpO,IACjChE,KAAKqS,YAAaC,EAAAA,EAAAA,GAAqBtO,EAAM,EAGvC,KAAAuO,cAAiBhQ,IACvBvC,KAAKwS,SAAWjQ,EAChBvC,KAAKmS,cAAc,gBAzGc,6HAqCR,oBAOL,EA3BtB1N,gBAAAA,IAuBAiD,qBAAAA,IACEC,EAAAA,EAAAA,GAAe3H,KAAMA,KAAK4H,iBAW5B5C,iBAAAA,IACEM,EAAAA,EAAAA,GAAiBtF,OACjBuF,EAAAA,EAAAA,GAAgBvF,MAChBA,KAAKkS,gBAAgBjN,QAAQjF,KAAKuC,IAGpC,uBAAMmC,SACEC,EAAAA,EAAAA,GAAc3E,MAGtByF,oBAAAA,IACEG,EAAAA,EAAAA,GAAoB5F,OACpB6F,EAAAA,EAAAA,GAAmB7F,MACnBA,KAAKkS,gBAAgBxM,aASvBK,MAAAA,GACE,MAAM,WAAEsM,EAAU,QAAEI,EAAO,SAAExL,GAAajH,KAE1C,OACEgG,EAAAA,EAAAA,GAAA,OAAArF,IAAA,2CAAK0F,MAAO9E,GACTkR,GACCzM,EAAAA,EAAAA,GAAA,kBACEuK,MAAOtJ,EAASwL,QAChBjM,IAAKxG,KAAKuS,cACVjL,MAAOtH,KAAK0S,cAEZ,MACJ1M,EAAAA,EAAAA,GAAA,OAAArF,IAAA,2CAAK0F,MAAO9E,EAAauF,QAASuL,IAChCrM,EAAAA,EAAAA,GAAA,QAAArF,IAAA,2CAAMoG,aAAc/G,KAAKoS,4BAqBzBO,QAAAA,CAASrH,GACf,OAAIA,EAAO0G,EACF,IACE1G,GAAQ0G,EACV,IAEA,IAIHG,YAAAA,GACN,MAAM,SAAEK,EAAQ,GAAEjQ,GAAOvC,KAEpBwS,IAILxS,KAAK0S,YAAc1S,KAAK2S,SAAS3B,KAAK4B,IAAIrQ,EAAGsQ,aAActQ,EAAGuQ,cAAgB,yMC/JjE,0xCCMV,MAAMC,EAA4E,CAAC,EAqB1F,SAASC,IACP,MAAM,IAAIC,MAAM,2CAClB,CAEA,SAASC,EAAc3S,GACrBA,EAAU0G,SAAW,IAChB1G,EAAU4S,mBACV5S,EAAU6S,iBAEjB,CAEA,SAASC,KASFpQ,eAAe0B,EAAcpE,GAClCA,EAAU4S,sBAAwBG,EAAc/S,EAAWA,EAAUqH,iBACrEsL,EAAc3S,EAChB,CAEA0C,eAAeqQ,EAAc/S,EAAyBgT,GACpD,KAAKtF,EAAAA,EAAAA,KACH,MAAO,CAAC,EAGV,MAAM,GAAE1L,GAAOhC,EAETiT,EADMjR,EAAGkR,QAAQC,cACG1H,QAAQ,WAAY,IAE9C,OArDF/I,eAAgCsQ,EAAchT,GAC5C,MAAMI,EAAM,GAAGJ,KAAagT,IAE5B,OAAIR,EAAkCpS,KAItCoS,EAAkCpS,GAAO2N,OAAMC,EAAAA,EAAAA,IAAa,YAAYhO,kBAA0BgT,WAC/F/E,MAAMC,IACAA,EAAKkF,IACRX,IAEKvE,EAAKC,UAEbC,OAAM,IAAMqE,OAVND,EAAkCpS,EAa7C,CAoCSiT,EAAiBC,EAAAA,EAAAA,GAAmBN,EAAM,OAAQC,EAC3D,CAaOvQ,eAAe0E,EAAepH,EAAyBgT,GAC5DhT,EAAU4S,sBAAwBG,EAAc/S,EAAWgT,GAC3DL,EAAc3S,EAChB,UAWgBgF,EAAgBhF,GAC9BA,EAAUkE,iBAAmBqP,CAC/B,UASgBjO,EAAmBtF,GAEjCA,EAAUkE,iBAAmB4O,CAC/B,CA6CA,SAASS,IACPZ,EAAclT,KAChB","sources":["../node_modules/@esri/calcite-components/dist/components/src/utils/logger.ts","../node_modules/@esri/calcite-components/dist/components/src/components/modal/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/modal/modal.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/modal/modal.scss?tag=calcite-modal&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/component.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/conditionalSlot.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/loadable.ts","../node_modules/@esri/calcite-components/dist/components/src/components/loader/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/loader/loader.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/loader/loader.scss?tag=calcite-loader&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.scss?tag=calcite-scrim&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/t9n.ts"],"sourcesContent":["import type { JSX } from \"../components\";\nimport { logLevel } from \"./config\";\n\nexport type LogLevel = \"debug\" | \"info\" | \"warn\" | \"error\" | \"trace\" | \"off\";\n\ntype Message = string;\ntype MajorVersion = number;\n\ntype DeprecatedContext = \"component\" | \"property\" | \"method\" | \"event\" | \"slot\";\n\ntype DeprecatedParams = {\n  name: string;\n  suggested?: string | string[];\n  component?: string;\n  removalVersion: MajorVersion | \"future\";\n};\n\ntype SimpleComponentName<T> = T extends `calcite-${infer Name}` ? Name : T;\n\ntype ComponentDeprecatedParams = Omit<DeprecatedParams, \"name\"> & {\n  name: SimpleComponentName<keyof JSX.IntrinsicElements>;\n};\n\n/**\n * Exported for testing purposes only\n */\nexport const loggedDeprecations = new Set<string>();\n\nconst logLevels = {\n  trace: 0,\n  debug: 1,\n  info: 2,\n  warn: 4,\n  error: 8,\n  off: 10,\n} as const;\n\nfunction willLog(level: LogLevel): boolean {\n  return logLevels[level] >= logLevels[logLevel];\n}\n\nfunction forwardToConsole(level: LogLevel, ...data: any[]): void {\n  if (!willLog(level)) {\n    return;\n  }\n\n  const badgeTemplate = \"%ccalcite\";\n  const badgeStyle = \"background: #007AC2; color: #fff; border-radius: 4px; padding: 2px 4px;\";\n\n  console[level].call(this, badgeTemplate, badgeStyle, ...data);\n}\n\nlet listFormatter: Intl.ListFormat;\n\nexport const logger = {\n  debug: (message: Message) => forwardToConsole(\"debug\", message),\n  info: (message: Message) => forwardToConsole(\"info\", message),\n  warn: (message: Message) => forwardToConsole(\"warn\", message),\n  error: (message: Message) => forwardToConsole(\"error\", message),\n  trace: (message: Message) => forwardToConsole(\"trace\", message),\n\n  deprecated,\n} as const;\n\n/**\n * Logs a deprecation warning to the console.\n *\n * @param context the context in which the deprecation is occurring\n * @param params the deprecation details\n */\nfunction deprecated(context: Exclude<DeprecatedContext, \"component\">, params: DeprecatedParams): void;\nfunction deprecated(context: Extract<DeprecatedContext, \"component\">, params: ComponentDeprecatedParams): void;\nfunction deprecated(\n  context: DeprecatedContext,\n  { component, name, suggested, removalVersion }: DeprecatedParams | ComponentDeprecatedParams,\n): void {\n  const key = `${context}:${context === \"component\" ? \"\" : component}${name}`;\n\n  if (loggedDeprecations.has(key)) {\n    return;\n  }\n\n  loggedDeprecations.add(key);\n\n  const multiSuggestions = Array.isArray(suggested);\n\n  if (multiSuggestions && !listFormatter) {\n    listFormatter = new Intl.ListFormat(\"en\", { style: \"long\", type: \"disjunction\" });\n  }\n\n  const message = `[${name}] ${context} is deprecated and will be removed in ${removalVersion === \"future\" ? `a future version` : `v${removalVersion}`}.${suggested ? ` Use ${multiSuggestions ? listFormatter.format(suggested.map((suggestion) => `\"${suggestion}\"`)) : `\"${suggested}\"`} instead.` : \"\"}`;\n\n  forwardToConsole(\"warn\", message);\n}\n","export const CSS = {\n  modal: \"modal\",\n  title: \"title\",\n  header: \"header\",\n  footer: \"footer\",\n  scrim: \"scrim\",\n  back: \"back\",\n  close: \"close\",\n  secondary: \"secondary\",\n  primary: \"primary\",\n  container: \"container\",\n  containerOpen: \"container--open\",\n  containerEmbedded: \"container--embedded\",\n  content: \"content\",\n  contentNoFooter: \"content--no-footer\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n\n  // these classes help apply the animation in phases to only set transform on open/close\n  // this helps avoid a positioning issue for any floating-ui-owning children\n  openingIdle: \"modal--opening-idle\",\n  openingActive: \"modal--opening-active\",\n  closingIdle: \"modal--closing-idle\",\n  closingActive: \"modal--closing-active\",\n};\n\nexport const DURATIONS = {\n  slow: 14000,\n  medium: 10000,\n  fast: 6000,\n  test: 300 / 1000,\n};\n\nexport const ICONS = {\n  close: \"x\",\n} as const;\n\nexport const SLOTS = {\n  content: \"content\",\n  contentBottom: \"content-bottom\",\n  contentTop: \"content-top\",\n  header: \"header\",\n  back: \"back\",\n  secondary: \"secondary\",\n  primary: \"primary\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  ensureId,\n  focusFirstTabbable,\n  getSlotted,\n  slotChangeHasAssignedElement,\n} from \"../../utils/dom\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrap,\n  FocusTrapComponent,\n  updateFocusTrapElements,\n} from \"../../utils/focusTrapComponent\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { Kind, Scale } from \"../interfaces\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { componentOnReady, getIconScale } from \"../../utils/component\";\nimport { logger } from \"../../utils/logger\";\nimport { ModalMessages } from \"./assets/modal/t9n\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\nlet totalOpenModals: number = 0;\nlet initialDocumentOverflowStyle: string = \"\";\n\nlogger.deprecated(\"component\", {\n  name: \"modal\",\n  removalVersion: 4,\n  suggested: \"dialog\",\n});\n\n/**\n * @deprecated Use the `calcite-dialog` component instead.\n * @slot header - A slot for adding header text.\n * @slot content - A slot for adding the component's content.\n * @slot content-top - A slot for adding content to the component's sticky header, where content remains at the top of the component when scrolling up and down.\n * @slot content-bottom - A slot for adding content to the component's sticky footer, where content remains at the bottom of the component when scrolling up and down.\n * @slot primary - A slot for adding a primary button.\n * @slot secondary - A slot for adding a secondary button.\n * @slot back - A slot for adding a back button.\n */\n@Component({\n  tag: \"calcite-modal\",\n  styleUrl: \"modal.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Modal\n  implements\n    ConditionalSlotComponent,\n    OpenCloseComponent,\n    FocusTrapComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, displays and positions the component.  */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  /**\n   * We use an internal property to handle styles for when a modal is actually opened, not just when the open attribute is applied. This is a property because we need to apply styles to the host element and to keep the styles present while beforeClose is.\n   *\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) opened = false;\n\n  /** Passes a function to run before the component closes. */\n  @Prop() beforeClose: (el: HTMLCalciteModalElement) => Promise<void>;\n\n  /** When `true`, disables the component's close button. */\n  @Prop({ reflect: true }) closeButtonDisabled = false;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /** When `true`, disables the closing of the component when clicked outside. */\n  @Prop({ reflect: true }) outsideCloseDisabled = false;\n\n  /** When `true`, prevents the component from expanding to the entire screen on mobile devices. */\n  @Prop({ reflect: true }) docked: boolean;\n\n  /**\n   * This internal property, managed by a containing calcite-shell, is used\n   * to inform the component if special configuration or styles are needed\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) embedded = false;\n\n  /** When `true`, disables the default close on escape behavior. */\n  @Prop({ reflect: true }) escapeDisabled = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the width of the component. */\n  @Prop({ reflect: true }) widthScale: Scale = \"m\";\n\n  /** Sets the component to always be fullscreen. Overrides `widthScale` and `--calcite-modal-width` / `--calcite-modal-height`. */\n  @Prop({ reflect: true }) fullscreen: boolean;\n\n  /** Specifies the kind of the component, which will apply to top border. */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"danger\" | \"info\" | \"success\" | \"warning\", Kind>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ModalMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ModalMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n    // when modal initially renders, if active was set we need to open as watcher doesn't fire\n    if (this.open) {\n      this.openModal();\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    this.cssVarObserver?.observe(this.el, { attributeFilter: [\"style\"] });\n    this.updateSizeCssVars();\n    this.updateFooterVisibility();\n    connectConditionalSlotComponent(this);\n    connectLocalized(this);\n    connectMessages(this);\n    connectFocusTrap(this);\n  }\n\n  disconnectedCallback(): void {\n    this.removeOverflowHiddenClass();\n    this.mutationObserver?.disconnect();\n    this.cssVarObserver?.disconnect();\n    disconnectConditionalSlotComponent(this);\n    deactivateFocusTrap(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.embedded = false;\n  }\n\n  render(): VNode {\n    return (\n      <Host\n        aria-describedby={this.contentId}\n        aria-labelledby={this.titleId}\n        aria-modal=\"true\"\n        role=\"dialog\"\n      >\n        <div\n          class={{\n            [CSS.container]: true,\n            [CSS.containerOpen]: this.opened,\n            [CSS.containerEmbedded]: this.embedded,\n          }}\n        >\n          <calcite-scrim class={CSS.scrim} onClick={this.handleOutsideClose} />\n          {this.renderStyle()}\n          <div\n            class={{\n              [CSS.modal]: true,\n            }}\n            ref={this.setTransitionEl}\n          >\n            <div class={CSS.header}>\n              {this.renderCloseButton()}\n              <header class={CSS.title}>\n                <slot name={CSS.header} />\n              </header>\n            </div>\n            {this.renderContentTop()}\n            <div\n              class={{\n                [CSS.content]: true,\n                [CSS.contentNoFooter]: !this.hasFooter,\n              }}\n              ref={(el) => (this.modalContent = el)}\n            >\n              <slot name={SLOTS.content} />\n            </div>\n            {this.renderContentBottom()}\n            {this.renderFooter()}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  renderFooter(): VNode {\n    return this.hasFooter ? (\n      <div class={CSS.footer} key=\"footer\">\n        <span class={CSS.back}>\n          <slot name={SLOTS.back} />\n        </span>\n        <span class={CSS.secondary}>\n          <slot name={SLOTS.secondary} />\n        </span>\n        <span class={CSS.primary}>\n          <slot name={SLOTS.primary} />\n        </span>\n      </div>\n    ) : null;\n  }\n\n  renderContentTop(): VNode {\n    return (\n      <div class={CSS.contentTop} hidden={!this.hasContentTop}>\n        <slot name={SLOTS.contentTop} onSlotchange={this.contentTopSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  renderContentBottom(): VNode {\n    return (\n      <div class={CSS.contentBottom} hidden={!this.hasContentBottom}>\n        <slot name={SLOTS.contentBottom} onSlotchange={this.contentBottomSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  renderCloseButton(): VNode {\n    return !this.closeButtonDisabled ? (\n      <button\n        aria-label={this.messages.close}\n        class={CSS.close}\n        key=\"button\"\n        onClick={this.handleCloseClick}\n        ref={(el) => (this.closeButtonEl = el)}\n        title={this.messages.close}\n      >\n        <calcite-icon icon={ICONS.close} scale={getIconScale(this.scale)} />\n      </button>\n    ) : null;\n  }\n\n  renderStyle(): VNode {\n    if (!this.fullscreen && (this.cssWidth || this.cssHeight)) {\n      return (\n        <style>\n          {`.${CSS.container} {\n              ${this.docked && this.cssWidth ? `align-items: center !important;` : \"\"}\n            }\n            .${CSS.modal} {\n              block-size: ${this.cssHeight ? this.cssHeight : \"auto\"} !important;\n              ${this.cssWidth ? `inline-size: ${this.cssWidth} !important;` : \"\"}\n              ${this.cssWidth ? `max-inline-size: ${this.cssWidth} !important;` : \"\"}\n              ${this.docked ? `border-radius: var(--calcite-border-radius) !important;` : \"\"}\n            }\n            @media screen and (max-width: ${this.cssWidth}) {\n              .${CSS.container} {\n                ${this.docked ? `align-items: flex-end !important;` : \"\"}\n              }\n              .${CSS.modal} {\n                max-block-size: 100% !important;\n                inline-size: 100% !important;\n                max-inline-size: 100% !important;\n                min-inline-size: 100% !important;\n                margin: 0 !important;\n                ${!this.docked ? `block-size: 100% !important;` : \"\"}\n                ${!this.docked ? `border-radius: 0 !important;` : \"\"}\n                ${\n                  this.docked\n                    ? `border-radius: var(--calcite-border-radius) var(--calcite-border-radius) 0 0 !important;`\n                    : \"\"\n                }\n              }\n            }\n          `}\n        </style>\n      );\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties/ State\n  //\n  //--------------------------------------------------------------------------\n\n  ignoreOpenChange = false;\n\n  @Element() el: HTMLCalciteModalElement;\n\n  modalContent: HTMLDivElement;\n\n  private mutationObserver: MutationObserver = createObserver(\"mutation\", () =>\n    this.handleMutationObserver(),\n  );\n\n  private cssVarObserver: MutationObserver = createObserver(\"mutation\", () => {\n    this.updateSizeCssVars();\n  });\n\n  titleId: string;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  focusTrap: FocusTrap;\n\n  closeButtonEl: HTMLButtonElement;\n\n  contentId: string;\n\n  @State() cssWidth: string | number;\n\n  @State() cssHeight: string | number;\n\n  @State() hasFooter = true;\n\n  @State() hasContentTop = false;\n\n  @State() hasContentBottom = false;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ModalMessages;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\", { target: \"window\" })\n  handleEscape(event: KeyboardEvent): void {\n    if (this.open && !this.escapeDisabled && event.key === \"Escape\" && !event.defaultPrevented) {\n      this.open = false;\n      event.preventDefault();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteModalBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteModalClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteModalBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteModalOpen: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's \"close\" button (the first focusable item).\n   *\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the element(s) that are used within the focus-trap of the component.\n   */\n  @Method()\n  async updateFocusTrapElements(): Promise<void> {\n    updateFocusTrapElements(this);\n  }\n\n  /**\n   * Sets the scroll top of the component's content.\n   *\n   * @param top\n   * @param left\n   */\n  @Method()\n  async scrollContent(top = 0, left = 0): Promise<void> {\n    if (this.modalContent) {\n      if (this.modalContent.scrollTo) {\n        this.modalContent.scrollTo({ top, left, behavior: \"smooth\" });\n      } else {\n        this.modalContent.scrollTop = top;\n        this.modalContent.scrollLeft = left;\n      }\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  onBeforeOpen(): void {\n    this.transitionEl.classList.add(CSS.openingActive);\n    this.calciteModalBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.transitionEl.classList.remove(CSS.openingIdle, CSS.openingActive);\n    this.calciteModalOpen.emit();\n    activateFocusTrap(this);\n  }\n\n  onBeforeClose(): void {\n    this.transitionEl.classList.add(CSS.closingActive);\n    this.calciteModalBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.transitionEl.classList.remove(CSS.closingIdle, CSS.closingActive);\n    this.calciteModalClose.emit();\n    deactivateFocusTrap(this);\n  }\n\n  @Watch(\"open\")\n  toggleModal(value: boolean): void {\n    if (this.ignoreOpenChange) {\n      return;\n    }\n\n    if (value) {\n      this.openModal();\n    } else {\n      this.closeModal();\n    }\n  }\n\n  @Watch(\"opened\")\n  handleOpenedChange(value: boolean): void {\n    const idleClass = value ? CSS.openingIdle : CSS.closingIdle;\n    this.transitionEl.classList.add(idleClass);\n    onToggleOpenCloseComponent(this);\n  }\n\n  private openEnd = (): void => {\n    this.setFocus();\n    this.el.removeEventListener(\"calciteModalOpen\", this.openEnd);\n  };\n\n  private handleCloseClick = () => {\n    this.open = false;\n  };\n\n  private async openModal(): Promise<void> {\n    await componentOnReady(this.el);\n    this.el.addEventListener(\"calciteModalOpen\", this.openEnd);\n    this.opened = true;\n    const titleEl = getSlotted(this.el, SLOTS.header);\n    const contentEl = getSlotted(this.el, SLOTS.content);\n\n    this.titleId = ensureId(titleEl);\n    this.contentId = ensureId(contentEl);\n\n    if (!this.embedded) {\n      if (totalOpenModals === 0) {\n        initialDocumentOverflowStyle = document.documentElement.style.overflow;\n      }\n\n      totalOpenModals++;\n      // use an inline style instead of a utility class to avoid global class declarations.\n      document.documentElement.style.setProperty(\"overflow\", \"hidden\");\n    }\n  }\n\n  private handleOutsideClose = (): void => {\n    if (this.outsideCloseDisabled) {\n      return;\n    }\n\n    this.open = false;\n  };\n\n  closeModal = async (): Promise<void> => {\n    if (this.beforeClose) {\n      try {\n        await this.beforeClose(this.el);\n      } catch (_error) {\n        // close prevented\n        requestAnimationFrame(() => {\n          this.ignoreOpenChange = true;\n          this.open = true;\n          this.ignoreOpenChange = false;\n        });\n        return;\n      }\n    }\n\n    totalOpenModals--;\n    this.opened = false;\n    this.removeOverflowHiddenClass();\n  };\n\n  private removeOverflowHiddenClass(): void {\n    document.documentElement.style.setProperty(\"overflow\", initialDocumentOverflowStyle);\n  }\n\n  private handleMutationObserver = (): void => {\n    this.updateFooterVisibility();\n    this.updateFocusTrapElements();\n  };\n\n  private updateFooterVisibility = (): void => {\n    this.hasFooter = !!getSlotted(this.el, [SLOTS.back, SLOTS.primary, SLOTS.secondary]);\n  };\n\n  private updateSizeCssVars = (): void => {\n    this.cssWidth = getComputedStyle(this.el).getPropertyValue(\"--calcite-modal-width\");\n    this.cssHeight = getComputedStyle(this.el).getPropertyValue(\"--calcite-modal-height\");\n  };\n\n  private contentTopSlotChangeHandler = (event: Event): void => {\n    this.hasContentTop = slotChangeHasAssignedElement(event);\n  };\n\n  private contentBottomSlotChangeHandler = (event: Event): void => {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  };\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-modal-content-background: Specifies the background color of content placed in the component's `\"content\"` slot.\n * @prop --calcite-modal-content-padding: Specifies the padding of the component's `\"content\"` slot.\n * @prop --calcite-modal-scrim-background: Specifies the background color of the component's scrim.\n * @prop --calcite-modal-width: Specifies the width of the component, using `px`, `em`, `rem`, `vw`, or `%`. Will never exceed the width of the viewport. Will not apply if `fullscreen` if set.\n * @prop --calcite-modal-height: Specifies the height of the component, using `px`, `em`, `rem`, `vh`, or `%`. Will never exceed the height of the viewport. Will not apply if `fullscreen` if set.\n *\n */\n\n:host {\n  --calcite-modal-scrim-background: #{rgba($calcite-color-neutral-blk-240, $calcite-opacity-85)};\n  @apply absolute flex inset-0 opacity-0 z-overlay;\n  visibility: hidden !important;\n  transition:\n    visibility 0ms linear var(--calcite-internal-animation-timing-slow),\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function;\n  // the modal should always use a dark scrim, regardless of light / dark mode - matches value in global.scss\n  --calcite-modal-scrim-background-internal: #{rgba($calcite-color-neutral-blk-240, $calcite-opacity-85)};\n}\n\n.content-top[hidden],\n.content-bottom[hidden] {\n  @apply hidden;\n}\n\n.container {\n  @apply text-color-2\n    fixed\n    inset-0\n    flex\n    items-center\n    justify-center\n    overflow-y-hidden\n    opacity-0\n    z-overlay;\n  visibility: hidden !important;\n  transition:\n    visibility 0ms linear var(--calcite-internal-animation-timing-slow),\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function;\n}\n\n:host([scale=\"s\"]) {\n  --calcite-modal-padding-internal: theme(\"spacing.3\");\n  --calcite-modal-padding-large-internal: theme(\"spacing.4\");\n  --calcite-modal-title-text-internal: theme(\"fontSize.1h\");\n  --calcite-modal-content-text-internal: theme(\"fontSize.n1\");\n}\n\n:host([scale=\"m\"]) {\n  --calcite-modal-padding-internal: theme(\"spacing.4\");\n  --calcite-modal-padding-large-internal: theme(\"spacing.5\");\n  --calcite-modal-title-text-internal: theme(\"fontSize.2h\");\n  --calcite-modal-content-text-internal: theme(\"fontSize.0\");\n}\n\n:host([scale=\"l\"]) {\n  --calcite-modal-padding-internal: theme(\"spacing.5\");\n  --calcite-modal-padding-large-internal: theme(\"spacing.6\");\n  --calcite-modal-title-text-internal: theme(\"fontSize.3h\");\n  --calcite-modal-content-text-internal: theme(\"fontSize.1\");\n}\n\n.scrim {\n  --calcite-scrim-background: var(--calcite-modal-scrim-background, var(--calcite-color-transparent-scrim));\n  @apply fixed inset-0 flex overflow-y-hidden;\n}\n\n.modal {\n  @apply shadow-2-sm\n    bg-foreground-1\n    pointer-events-none\n    float-none\n    m-6\n    box-border\n    flex\n    w-full\n    flex-col\n    overflow-hidden\n    rounded\n    opacity-0\n    z-modal;\n  -webkit-overflow-scrolling: touch;\n  visibility: hidden;\n  transition:\n    transform var(--calcite-internal-animation-timing-slow) $easing-function,\n    visibility 0ms linear var(--calcite-internal-animation-timing-slow),\n    opacity var(--calcite-internal-animation-timing-slow) $easing-function;\n\n  --calcite-modal-hidden-position: translate3d(0, 20px, 0);\n  --calcite-modal-shown-position: translate3d(0, 0, 0);\n\n  &--opening {\n    &-idle {\n      transform: var(--calcite-modal-hidden-position);\n    }\n    &-active {\n      transform: var(--calcite-modal-shown-position);\n    }\n  }\n\n  &--closing {\n    &-idle {\n      transform: var(--calcite-modal-shown-position);\n    }\n    &-active {\n      transform: var(--calcite-modal-hidden-position);\n    }\n  }\n}\n\n:host([opened]) {\n  @apply opacity-100;\n  visibility: visible !important;\n  transition-delay: 0ms;\n}\n\n.container--open {\n  @apply opacity-100;\n  visibility: visible !important;\n  transition-delay: 0ms;\n  .modal {\n    @apply pointer-events-auto visible opacity-100;\n    transition:\n      transform var(--calcite-internal-animation-timing-slow) $easing-function,\n      visibility 0ms linear,\n      opacity var(--calcite-internal-animation-timing-slow) $easing-function,\n      max-inline-size var(--calcite-internal-animation-timing-slow) $easing-function,\n      max-block-size var(--calcite-internal-animation-timing-slow) $easing-function;\n    transition-delay: 0ms;\n  }\n}\n\n/**\n * Header\n */\n.header {\n  @apply bg-foreground-1\n    border-color-3\n    flex\n    min-w-0\n    max-w-full\n    rounded-t\n    border-0\n    border-b\n    border-solid\n    z-header;\n  flex: 0 0 auto;\n}\n\n.close {\n  @apply text-color-3\n    transition-default\n    focus-base\n    order-2\n    m-0\n    cursor-pointer\n    appearance-none\n    border-none\n    bg-transparent;\n  padding-block: var(--calcite-modal-padding-internal);\n  padding-inline: var(--calcite-modal-padding-internal);\n  flex: 0 0 auto;\n  calcite-icon {\n    @apply pointer-events-none;\n    vertical-align: -2px;\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:hover,\n  &:focus,\n  &:active {\n    @apply bg-foreground-2 text-color-1;\n  }\n}\n\n.title {\n  @apply order-1 flex min-w-0 items-center;\n  flex: 1 1 auto;\n  padding-block: var(--calcite-modal-padding-internal);\n  padding-inline: var(--calcite-modal-padding-large-internal);\n}\n\n@include slotted(\"header\", \"*\") {\n  @apply text-color-1 m-0 font-normal;\n  font-size: var(--calcite-modal-title-text-internal);\n}\n\n/**\n * Content area\n */\n.content {\n  @apply relative box-border block h-full overflow-auto p-0;\n  background-color: var(--calcite-modal-content-background, theme(\"colors.background.foreground.1\"));\n  max-block-size: 100%;\n  padding: var(--calcite-modal-content-padding, var(--calcite-modal-padding-internal));\n}\n\n.content-top,\n.content-bottom {\n  @apply bg-foreground-1 border-color-3 border-solid border-0 z-header flex;\n  flex: 0 0 auto;\n  padding: var(--calcite-modal-padding-internal);\n}\n\n.content-top {\n  @apply min-w-0 max-w-full border-b;\n}\n\n.content-bottom {\n  @apply mt-auto box-border w-full justify-between border-t;\n}\n\n.content-top:not(.header ~ .content-top) {\n  @apply rounded-t;\n}\n\n.content-bottom:not(.content-bottom ~ .footer),\n.content--no-footer {\n  @apply rounded-b;\n}\n\n@include slotted(\"content\", \"*\") {\n  font-size: var(--calcite-modal-context-text-internal);\n}\n\n/**\n * Footer\n */\n.footer {\n  @apply bg-foreground-1\n    border-color-3\n    mt-auto\n    box-border\n    flex\n    w-full\n    justify-between\n    rounded-b\n    border-0\n    border-t\n    border-solid\n    z-header;\n  flex: 0 0 auto;\n  padding-block: var(--calcite-modal-padding-internal);\n  padding-inline: var(--calcite-modal-padding-large-internal);\n}\n\n.footer--hide-back .back,\n.footer--hide-secondary .secondary {\n  @apply hidden;\n}\n\n.back {\n  @apply block;\n  margin-inline-end: auto;\n}\n\n.secondary {\n  @apply mx-1 block;\n}\n\nslot[name=\"primary\"] {\n  @apply block;\n}\n\n/**\n * Sizes\n */\n@mixin modal-size($size, $width) {\n  :host([width-scale=\"#{$size}\"]) .modal {\n    @apply max-h-full max-w-full;\n    inline-size: var(--calcite-modal-width, $width);\n    block-size: var(--calcite-modal-height, auto);\n  }\n\n  @media screen and (max-width: $width + 2 * $baseline) {\n    :host([width-scale=\"#{$size}\"]) {\n      .modal {\n        @apply m-0 h-full max-h-full w-full max-w-full;\n      }\n      .content {\n        flex: 1 1 auto;\n        max-block-size: unset;\n      }\n    }\n    :host([width-scale=\"#{$size}\"][docked]) .container {\n      align-items: flex-end;\n    }\n  }\n}\n\n:host([width=\"small\"]) .modal {\n  @apply w-auto;\n}\n\n@include modal-size(\"s\", 32rem);\n@include modal-size(\"m\", 48rem);\n@include modal-size(\"l\", 94rem);\n\n/**\n * Fullscreen\n */\n:host([fullscreen]) {\n  .modal {\n    @apply m-0 max-h-full max-w-full h-full w-full rounded-none;\n    --calcite-modal-hidden-position: translate3D(0, 20px, 0) scale(0.95);\n    --calcite-modal-shown-position: translate3D(0, 0, 0) scale(1);\n  }\n  .content {\n    @apply max-h-full;\n    flex: 1 1 auto;\n  }\n}\n\n:host([opened][fullscreen]) {\n  .header,\n  .footer,\n  .content-top,\n  .content-bottom {\n    border-radius: 0;\n  }\n}\n\n/**\n * Docked\n */\n:host([docked]) {\n  .modal {\n    block-size: var(--calcite-modal-height, auto);\n  }\n  .content {\n    @apply h-auto;\n    flex: 1 1 auto;\n  }\n}\n\n/**\n * Kinds\n */\n:host([kind=\"brand\"]) .modal {\n  @apply border-color-brand;\n}\n\n:host([kind=\"danger\"]) .modal {\n  @apply border-color-danger;\n}\n\n:host([kind=\"info\"]) .modal {\n  @apply border-color-info;\n}\n\n:host([kind=\"success\"]) .modal {\n  @apply border-color-success;\n}\n\n:host([kind=\"warning\"]) .modal {\n  @apply border-color-warning;\n}\n\n:host([kind=\"brand\"]),\n:host([kind=\"danger\"]),\n:host([kind=\"info\"]),\n:host([kind=\"success\"]),\n:host([kind=\"warning\"]) {\n  .modal {\n    @apply border-0 border-t-4 border-solid;\n  }\n  .header,\n  .content-top {\n    @apply rounded rounded-b-none;\n  }\n}\n\n/**\n * Tablet\n */\n@media screen and (max-width: $viewport-medium) {\n  @include slotted(\"header\", \"content-top\", \"*\") {\n    @apply text-1;\n  }\n  .footer,\n  .content-bottom {\n    @apply sticky bottom-0;\n  }\n}\n\n/**\n * Mobile\n */\n@media screen and (max-width: $viewport-small) {\n  .footer,\n  .content-bottom {\n    @apply flex-col;\n  }\n  .back,\n  .secondary {\n    @apply m-0 mb-1;\n  }\n}\n\n/**\n * Conditional styles for when Modal is slotted in Shell\n */\n\n.container--embedded {\n  position: absolute;\n  pointer-events: auto;\n  calcite-scrim {\n    position: absolute;\n  }\n}\n\n@include base-component();\n","import { HTMLStencilElement } from \"@stencil/core/internal\";\nimport { Scale } from \"../components/interfaces\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n","import { forceUpdate } from \"@stencil/core\";\nimport { createObserver, ExtendedMutationObserver } from \"./observers\";\n\n/**\n * Defines interface for components with a dynamically changing slot.\n *\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport interface ConditionalSlotComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n}\n\nlet mutationObserver: ExtendedMutationObserver;\nconst observerOptions: Pick<Parameters<MutationObserver[\"observe\"]>[1], \"childList\"> = { childList: true };\n\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function connectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n\n  mutationObserver.observe(component.el, observerOptions);\n}\n\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function disconnectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  mutationObserver.unobserve(component.el);\n}\n\nfunction processMutations(mutations: MutationRecord[]): void {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: [Deprecated] Use `--calcite-icon-color`. Specifies the component's color. Defaults to current color.\n * @prop --calcite-icon-color: Specifies the component's color. Defaults to current color.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","export const CSS = {\n  loader: \"loader\",\n  loaderParts: \"loader__svgs\",\n  loaderPart: \"loader__svg\",\n  loaderPartId: (partId: number) => `${CSS.loaderPart}--${partId}` as const,\n  loaderText: \"loader__text\",\n  loaderPercentage: \"loader__percentage\",\n};\n","import { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { guid } from \"../../utils/guid\";\nimport { Scale } from \"../interfaces\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-loader\",\n  styleUrl: \"loader.scss\",\n  shadow: true,\n})\nexport class Loader implements LocalizedComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Indicates whether the component is in a loading state.\n   *\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) complete = false;\n\n  /** When `true`, displays smaller and appears to the left of the text. */\n  @Prop({ reflect: true }) inline = false;\n\n  /** Accessible name for the component. */\n  @Prop() label!: string;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies the component type.\n   *\n   * Use `\"indeterminate\"` if finding actual progress value is impossible. Otherwise, use `\"determinate\"` to have the value indicate the progress or `\"determinate-value\"` to have the value label displayed along the progress.\n   *\n   */\n  @Prop({ reflect: true }) type: \"indeterminate\" | \"determinate\" | \"determinate-value\" =\n    \"indeterminate\";\n\n  /** The component's value. Valid only for `\"determinate\"` indicators. Percent complete of 100. */\n  @Prop() value = 0;\n\n  @Watch(\"value\")\n  valueChangeHandler(): void {\n    this.complete = this.type.startsWith(\"determinate\") && this.value === 100;\n  }\n\n  /** Text that displays under the component's indicator. */\n  @Prop() text = \"\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n\n    this.updateFormatter();\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n  }\n\n  componentWillLoad(): void {\n    requestAnimationFrame(() => this.valueChangeHandler());\n  }\n\n  render(): VNode {\n    const { el, inline, label, scale, text, type, value } = this;\n\n    const id = el.id || guid();\n    const radiusRatio = 0.45;\n    const size = inline ? this.getInlineSize(scale) : this.getSize(scale);\n    const radius = size * radiusRatio;\n    const viewbox = `0 0 ${size} ${size}`;\n    const isDeterminate = type.startsWith(\"determinate\");\n    const circumference = 2 * radius * Math.PI;\n    const progress = (value / 100) * circumference;\n    const remaining = circumference - progress;\n    const valueNow = Math.floor(value);\n    const determinateStyle = { \"stroke-dasharray\": `${progress} ${remaining}` };\n\n    return (\n      <Host\n        aria-label={label}\n        aria-valuemax={isDeterminate ? \"100\" : undefined}\n        aria-valuemin={isDeterminate ? \"0\" : undefined}\n        aria-valuenow={isDeterminate ? valueNow.toString() : undefined}\n        id={id}\n        role=\"progressbar\"\n      >\n        <div class={CSS.loaderParts}>\n          {[1, 2, 3].map((index) => (\n            <svg\n              aria-hidden=\"true\"\n              class={{\n                [CSS.loaderPart]: true,\n                [CSS.loaderPartId(index)]: true,\n              }}\n              key={index}\n              style={isDeterminate && index === 3 ? determinateStyle : undefined}\n              viewBox={viewbox}\n            >\n              <circle cx={size / 2} cy={size / 2} r={radius} />\n            </svg>\n          ))}\n          {isDeterminate && <div class={CSS.loaderPercentage}>{this.formatValue()}</div>}\n        </div>\n        {text && <div class={CSS.loaderText}>{text}</div>}\n      </Host>\n    );\n  }\n\n  private formatValue = (): string => {\n    if (this.type !== \"determinate-value\") {\n      return `${this.value}`;\n    }\n\n    return this.formatter.format(this.value / 100);\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteLoaderElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  @Watch(\"type\")\n  formatterPropsChange(): void {\n    this.updateFormatter();\n  }\n\n  private formatter: Intl.NumberFormat;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Return the proper sizes based on the scale property\n   *\n   * @param scale\n   */\n  private getSize(scale: string) {\n    return {\n      s: 32,\n      m: 56,\n      l: 80,\n    }[scale];\n  }\n\n  private getInlineSize(scale: string) {\n    return {\n      s: 12,\n      m: 16,\n      l: 20,\n    }[scale];\n  }\n\n  private updateFormatter(): void {\n    if (\n      this.type !== \"determinate-value\" ||\n      this.formatter?.resolvedOptions().locale === this.effectiveLocale\n    ) {\n      return;\n    }\n\n    this.formatter = new Intl.NumberFormat(this.effectiveLocale, {\n      style: \"percent\",\n    });\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-loader-font-size: Specifies the font size of the loading percentage when type is `\"determinate\"`.\n * @prop --calcite-loader-size: The width and height of a non-inline loader.\n * @prop --calcite-loader-size-inline: The width and height of an inline loader\n * @prop --calcite-loader-padding : Specifies the padding of the loader.\n */\n\n@import \"../../assets/styles/animation\";\n\n$stroke-width: 3;\n$loader-scale: 54;\n$loader-circumference: ($loader-scale - (2 * $stroke-width)) * 3.14159;\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0;\n  }\n}\n\n:host {\n  @apply relative mx-auto hidden items-center justify-center opacity-100;\n  min-block-size: var(--calcite-loader-size);\n  font-size: var(--calcite-loader-font-size);\n  stroke: var(--calcite-color-brand);\n  stroke-width: $stroke-width;\n  fill: none;\n  transform: scale(1, 1);\n  animation: loader-color-shift scale-duration(--calcite-internal-animation-timing-slow, 2) alternate-reverse infinite\n    linear;\n  padding-block: var(--calcite-loader-padding, theme(\"spacing.16\"));\n  will-change: contents;\n}\n\n:host([scale=\"s\"]) {\n  --calcite-loader-font-size: var(--calcite-font-size--3);\n  --calcite-loader-size: theme(\"spacing.8\");\n  --calcite-loader-size-inline: theme(\"spacing.3\");\n  --calcite-internal-loader-value-line-height: 0.625rem; // 10px\n}\n\n:host([scale=\"m\"]) {\n  --calcite-loader-font-size: theme(\"fontSize.0\");\n  --calcite-loader-size: theme(\"spacing.16\");\n  --calcite-loader-size-inline: theme(\"spacing.4\");\n  --calcite-internal-loader-value-line-height: 1.375rem; // 22px\n}\n\n:host([scale=\"l\"]) {\n  --calcite-loader-font-size: theme(\"fontSize.2\");\n  --calcite-loader-size: theme(\"spacing.24\");\n  --calcite-loader-size-inline: theme(\"spacing.6\");\n  --calcite-internal-loader-value-line-height: 1.71875rem; // 27.5px\n}\n\n:host([no-padding]) {\n  @apply py-0;\n}\n\n:host {\n  @apply flex;\n}\n\n.loader__text {\n  @apply text-n2h\n  text-color-1\n  block\n  text-center;\n  margin-block-start: calc(var(--calcite-loader-size) + theme(\"spacing.6\"));\n}\n\n.loader__percentage {\n  @apply block text-center text-color-1;\n  font-size: var(--calcite-loader-font-size);\n  inline-size: var(--calcite-loader-size);\n  line-height: var(--calcite-internal-loader-value-line-height);\n  align-self: center;\n}\n\n.loader__svgs {\n  @apply absolute overflow-visible opacity-100;\n  inline-size: var(--calcite-loader-size);\n  block-size: var(--calcite-loader-size);\n  inset-inline-start: 50%;\n  margin-inline-start: calc(var(--calcite-loader-size) / 2 * -1);\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n  animation-duration: scale-duration(--calcite-internal-animation-timing-slow, 6.66);\n  animation-name: loader-clockwise;\n  display: flex;\n}\n\n.loader__svg {\n  @apply absolute top-0 origin-center overflow-visible;\n  inset-inline-start: 0;\n  inline-size: var(--calcite-loader-size);\n  block-size: var(--calcite-loader-size);\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n\n  &--1 {\n    animation-name: loader-offset-1;\n  }\n  &--2 {\n    animation-name: loader-offset-2;\n  }\n  &--3 {\n    animation-name: loader-offset-3;\n  }\n}\n\n:host([type=\"determinate\"]),\n:host([type=\"determinate-value\"]) {\n  @apply animate-none;\n  stroke: var(--calcite-color-border-3);\n  .loader__svgs {\n    @apply animate-none;\n  }\n  .loader__svg--3 {\n    @apply animate-none;\n    stroke: var(--calcite-color-brand);\n    stroke-dasharray: $loader-circumference;\n    transform: rotate(-90deg);\n    transition: all var(--calcite-internal-animation-timing-fast) linear;\n  }\n}\n\n:host([inline]) {\n  @apply relative m-0 animate-none stroke-current stroke-2 py-0;\n  block-size: var(--calcite-loader-size-inline);\n  min-block-size: var(--calcite-loader-size-inline);\n  inline-size: var(--calcite-loader-size-inline);\n  margin-inline-end: calc(var(--calcite-loader-size-inline) * 0.5);\n  vertical-align: calc(var(--calcite-loader-size-inline) * -1 * 0.2);\n}\n\n:host([inline]) .loader__svgs {\n  @apply top-0 m-0;\n  inset-inline-start: 0;\n  inline-size: var(--calcite-loader-size-inline);\n  block-size: var(--calcite-loader-size-inline);\n}\n\n:host([inline]) .loader__svg {\n  inline-size: var(--calcite-loader-size-inline);\n  block-size: var(--calcite-loader-size-inline);\n}\n\n:host([complete]) {\n  @apply opacity-0;\n  transform: scale(0.75, 0.75);\n  transform-origin: center;\n  transition:\n    opacity var(--calcite-internal-animation-timing-medium) linear 1000ms,\n    transform var(--calcite-internal-animation-timing-medium) linear 1000ms;\n}\n\n:host([complete]) .loader__svgs {\n  @apply opacity-0;\n  transform: scale(0.75, 0.75);\n  transform-origin: center;\n  transition:\n    opacity calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms,\n    transform calc(180ms * var(--calcite-internal-duration-factor)) linear 800ms;\n}\n\n:host([complete]) .loader__percentage {\n  color: theme(\"colors.brand\");\n  transform: scale(1.05, 1.05);\n  transform-origin: center;\n  transition:\n    color var(--calcite-internal-animation-timing-medium) linear,\n    transform var(--calcite-internal-animation-timing-medium) linear;\n}\n\n/**\n  Segment variables\n  - i         index (1-3)\n  - size      length of the segment (0 - 100)\n  - growth    how much the segment grows during the animation\n              (size + growth should not exceed 100)\n  - duration  how long the segment takes to rotate 360° (seconds)\n*/\n@mixin generate-segment($i, $size, $growth, $duration) {\n  $circumference: calc($loader-circumference / $loader-scale) * 100;\n  $length: ($size * 0.01) * $circumference;\n  $end: $length + ($growth * 0.01) * $circumference;\n\n  .loader__svg--#{$i} {\n    stroke-dasharray: $length $circumference - $end;\n    animation-duration: $duration;\n  }\n  @keyframes loader-offset-#{$i} {\n    0% {\n      stroke-dasharray: $length $circumference - $length;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: $end $circumference - $end;\n      stroke-dashoffset: -$circumference * 0.5 - ($length - $end) * 0.5;\n    }\n    100% {\n      stroke-dasharray: $length $circumference - $length;\n      stroke-dashoffset: -$circumference;\n    }\n  }\n}\n\n@include generate-segment(1, 10, 40, scale-duration(--calcite-internal-animation-timing-slow, 4.8));\n@include generate-segment(2, 20, 30, scale-duration(--calcite-internal-animation-timing-slow, 6.4));\n@include generate-segment(3, 05, 45, scale-duration(--calcite-internal-animation-timing-slow, 7.734));\n\n@keyframes loader-color-shift {\n  0% {\n    stroke: var(--calcite-color-brand);\n  }\n  33% {\n    stroke: var(--calcite-color-brand-press);\n  }\n  66% {\n    stroke: var(--calcite-color-brand-hover);\n  }\n  100% {\n    stroke: var(--calcite-color-brand);\n  }\n}\n\n@keyframes loader-clockwise {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n@include base-component();\n","export const CSS = {\n  scrim: \"scrim\",\n  content: \"content\",\n};\n\nexport const BREAKPOINTS = {\n  s: 72, // Less than 72px.\n  // medium is assumed default.\n  l: 480, // Greater than or equal to 480px.\n};\n","import { Component, Element, h, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { slotChangeHasContent } from \"../../utils/dom\";\nimport { CSS, BREAKPOINTS } from \"./resources\";\nimport { ScrimMessages } from \"./assets/scrim/t9n\";\n\n/**\n * @slot - A slot for adding custom content, primarily loading information.\n */\n@Component({\n  tag: \"calcite-scrim\",\n  styleUrl: \"scrim.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Scrim implements LocalizedComponent, T9nComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ScrimMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ScrimMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteScrimElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.handleResize());\n\n  loaderEl: HTMLCalciteLoaderElement;\n\n  @State() loaderScale: Scale;\n\n  @State() defaultMessages: ScrimMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() hasContent = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.resizeObserver?.observe(this.el);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Method\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { hasContent, loading, messages } = this;\n\n    return (\n      <div class={CSS.scrim}>\n        {loading ? (\n          <calcite-loader\n            label={messages.loading}\n            ref={this.storeLoaderEl}\n            scale={this.loaderScale}\n          />\n        ) : null}\n        <div class={CSS.content} hidden={!hasContent}>\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </div>\n      </div>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.hasContent = slotChangeHasContent(event);\n  };\n\n  private storeLoaderEl = (el: HTMLCalciteLoaderElement): void => {\n    this.loaderEl = el;\n    this.handleResize();\n  };\n\n  private getScale(size: number): Scale {\n    if (size < BREAKPOINTS.s) {\n      return \"s\";\n    } else if (size >= BREAKPOINTS.l) {\n      return \"l\";\n    } else {\n      return \"m\";\n    }\n  }\n\n  private handleResize(): void {\n    const { loaderEl, el } = this;\n\n    if (!loaderEl) {\n      return;\n    }\n\n    this.loaderScale = this.getScale(Math.min(el.clientHeight, el.clientWidth) ?? 0);\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-scrim-background: Specifies the background color of the scrim.\n */\n:host {\n  --calcite-scrim-background: var(--calcite-color-transparent-scrim);\n}\n\n:host {\n  @apply absolute\n  inset-0\n  z-overlay\n  flex\n  h-full\n  w-full\n  flex-col\n  items-stretch;\n}\n\n@keyframes calcite-scrim-fade-in {\n  0% {\n    @apply bg-opacity-0;\n  }\n  100% {\n    @apply text-opacity-100;\n  }\n}\n\n.scrim {\n  @apply absolute\n  inset-0\n  flex\n  flex-col\n  content-center\n  items-center\n  justify-center\n  overflow-hidden;\n  animation: calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;\n  background-color: var(--calcite-scrim-background, var(--calcite-color-transparent-scrim));\n}\n\n.content {\n  @apply p-4;\n}\n\n@include base-component();\n","import { getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\nimport { isBrowser } from \"./browser\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\nfunction noop(): void {\n  // intentionally empty\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!isBrowser()) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  // we set this to noop to for watchers triggered when components are disconnected\n  component.onMessagesChange = noop;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange: () => void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["loggedDeprecations","Set","logLevels","trace","debug","info","warn","error","off","forwardToConsole","level","logLevel","willLog","_len","arguments","length","data","Array","_key","console","call","this","listFormatter","logger","message","deprecated","context","_ref","component","name","suggested","removalVersion","key","has","add","multiSuggestions","isArray","Intl","ListFormat","style","type","format","map","suggestion","CSS","ICONS","SLOTS","totalOpenModals","initialDocumentOverflowStyle","Modal","proxyCustomElement","HTMLElement","ignoreOpenChange","mutationObserver","createObserver","handleMutationObserver","cssVarObserver","updateSizeCssVars","openTransitionProp","setTransitionEl","el","transitionEl","openEnd","setFocus","removeEventListener","handleCloseClick","open","handleOutsideClose","outsideCloseDisabled","closeModal","async","beforeClose","_error","requestAnimationFrame","opened","removeOverflowHiddenClass","updateFooterVisibility","updateFocusTrapElements","hasFooter","getSlotted","cssWidth","getComputedStyle","getPropertyValue","cssHeight","contentTopSlotChangeHandler","event","hasContentTop","slotChangeHasAssignedElement","contentBottomSlotChangeHandler","hasContentBottom","handleFocusTrapDisabled","focusTrapDisabled","deactivateFocusTrap","activateFocusTrap","onMessagesChange","componentWillLoad","setUpMessages","setUpLoadableComponent","openModal","componentDidLoad","setComponentLoaded","connectedCallback","observe","childList","subtree","attributeFilter","connectConditionalSlotComponent","connectLocalized","connectMessages","connectFocusTrap","disconnectedCallback","disconnect","disconnectConditionalSlotComponent","disconnectLocalized","disconnectMessages","embedded","render","h","Host","contentId","titleId","role","class","onClick","renderStyle","ref","renderCloseButton","renderContentTop","modalContent","renderContentBottom","renderFooter","hidden","onSlotchange","closeButtonDisabled","messages","close","closeButtonEl","title","icon","scale","getIconScale","fullscreen","docked","effectiveLocaleChange","updateMessages","effectiveLocale","handleEscape","escapeDisabled","defaultPrevented","preventDefault","componentFocusable","focusFirstTabbable","scrollContent","top","undefined","left","scrollTo","behavior","scrollTop","scrollLeft","onBeforeOpen","classList","calciteModalBeforeOpen","emit","onOpen","remove","calciteModalOpen","onBeforeClose","calciteModalBeforeClose","onClose","calciteModalClose","toggleModal","value","handleOpenedChange","idleClass","onToggleOpenCloseComponent","componentOnReady","addEventListener","titleEl","contentEl","ensureId","document","documentElement","overflow","setProperty","componentScale","isStencilEl","Promise","resolve","observerOptions","processMutations","unobserve","mutations","forEach","target","forceUpdate","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","size","numberLeadingName","isNaN","Number","charAt","parts","split","firstNonDigitInPartPattern","part","partIndex","replace","match","offset","toUpperCase","join","normalizeIconName","filled","substring","getCachedIconDataByKey","id","Icon","visible","waitUntilVisible","loadIconPathData","intersectionObserver","flipRtl","pathData","textLabel","dir","getElementDir","semantic","paths","concat","toAriaBoolean","svg","fill","height","viewBox","width","xmlns","path","d","opacity","isBrowser","fetchIconProps","props","cachedIconKey","cachedIconData","fetch","getAssetPath","then","resp","json","catch","fetchIcon","callback","entries","entry","isIntersecting","rootMargin","resolveMap","WeakMap","promiseMap","set","get","componentLoaded","loader","loaderParts","loaderPart","loaderPartId","partId","loaderText","loaderPercentage","Loader","formatValue","formatter","valueChangeHandler","complete","startsWith","updateFormatter","inline","label","text","guid","getInlineSize","getSize","radius","viewbox","isDeterminate","circumference","Math","PI","progress","remaining","valueNow","floor","determinateStyle","toString","index","cx","cy","r","formatterPropsChange","resolvedOptions","locale","NumberFormat","BREAKPOINTS","Scrim","resizeObserver","handleResize","handleDefaultSlotChange","hasContent","slotChangeHasContent","storeLoaderEl","loaderEl","loading","loaderScale","getScale","min","clientHeight","clientWidth","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","noop","fetchMessages","lang","componentName","tagName","toLowerCase","ok","getMessageBundle","getSupportedLocale","defaultOnMessagesChange"],"sourceRoot":""}