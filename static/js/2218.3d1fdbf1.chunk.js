"use strict";(self.webpackChunkbox=self.webpackChunkbox||[]).push([[2218],{92218:(e,t,a)=>{a.r(t),a.d(t,{default:()=>F});var i,n=a(35143),s=(a(35238),a(94643)),o=a(50076),r=a(76460),l=a(87663),h=a(50346),d=a(46053),u=(a(81806),a(47249),a(85842)),c=a(25515),y=a(98618),p=a(1484);!function(e){e.MULTIPLIER="multiplier",e.ABSOLUTE="absoluteValue"}(i||(i={}));var g=a(68705),f=a(83716),m=a(52451),C=a(65624),L=a(5682),M=a(28899);let k,b=null;function w(){return k||(k=a.e(3884).then(a.bind(a,83884)).then((e=>e.l)).then((e=>{let{default:t}=e;return t({locateFile:e=>(0,M.s)(`esri/libs/linkchartlayout/${e}`)})})).then((e=>{!function(e){b=e}(e)})),k)}var E,T,A;function D(e,t,a,i,n,s){const o=a.length,r=n.length,l=Float64Array.BYTES_PER_ELEMENT,h=Uint32Array.BYTES_PER_ELEMENT,d=Uint8Array.BYTES_PER_ELEMENT,u=16+o*(d+2*l)+r*(2*h),c=b._malloc(u);try{const d=c+16-c%16,u=d+o*l,y=u+o*l,p=y+r*h,g=p+r*h,f=()=>[b.HEAPF64.subarray(d>>3,(d>>3)+o),b.HEAPF64.subarray(u>>3,(u>>3)+o),b.HEAPU32.subarray(y>>2,(y>>2)+r),b.HEAPU32.subarray(p>>2,(p>>2)+r),b.HEAPU8.subarray(g,g+o)],[m,C,L,M,k]=f();m.set(a),C.set(i),L.set(n),M.set(s),k.set(t);let w=e(o,g,d,u,r,y,p),E=null,T=null;if(w){const e=b.getLayoutLinksTypes(),t=b.getLayoutLinksVerticesEndIndices(),a=b.getLayoutLinksVertices(),i=b.countLayoutLinksVertices();!r||e&&t?i&&!a?w=!1:(E={types:new Uint8Array(b.HEAPU8.subarray(e,e+r)),vertexEndIndex:new Uint32Array(b.HEAPU32.subarray(t>>2,(t>>2)+r)),vertices:new Float64Array(b.HEAPF64.subarray(a>>3,(a>>3)+2*i))},T=b.getAuxiliaryGraphicElements()):w=!1}const[A,D,x,v,N]=f();return a.set(A),i.set(D),n.set(x),s.set(v),t.set(N),{success:w,links:E,graphics:T}}finally{b._free(c),b.cleanupLayout()}}(A=E||(E={}))[A.None=0]="None",A[A.IsMovable=1]="IsMovable",A[A.IsGeographic=2]="IsGeographic",A[A.IsRoot=4]="IsRoot",function(e){e[e.Regular=0]="Regular",e[e.Orthogonal=1]="Orthogonal",e[e.Curved=2]="Curved",e[e.Recursive=3]="Recursive"}(T||(T={}));var x,v,N,_,R,I,P,G,Z;!function(e){e.getMinIdealEdgeLength=function(){return b.getMinIdealEdgeLength()},e.apply=function(e,t,a,i,n){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,r=arguments.length>7&&void 0!==arguments[7]?arguments[7]:-1;return D(((e,t,a,i,n,l,h)=>b.applyForceDirectedLayout(e,t,a,i,n,l,h,s,o,r)),e,t,a,i,n)}}(x||(x={})),function(e){e.apply=function(e,t,a,i,n){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1,r=arguments.length>7&&void 0!==arguments[7]?arguments[7]:-1;return D(((e,t,a,i,n,l,h)=>b.applyCommunityLayout(e,t,a,i,n,l,h,s,o,r)),e,t,a,i,n)}}(v||(v={})),function(e){e.apply=function(e,t,a,i,n){return D(b.applySimpleLayout,e,t,a,i,n)}}(N||(N={})),function(e){e.apply=function(e,t,a,i,n){return D(b.applyHierarchicalLayout,e,t,a,i,n)}}(_||(_={})),function(e){e.apply=function(e,t,a,i,n){return D(b.applyRadialTreeLayout,e,t,a,i,n)}}(R||(R={})),function(e){e.apply=function(e,t,a,i,n){return D(b.applySmartTreeLayout,e,t,a,i,n)}}(I||(I={})),function(e){e.apply=function(e,t,a,i,n,s,o,r,l){return D(((e,t,a,s,o,h,d)=>{if(i.length!==e)return!1;if(n.length!==e)return!1;if(r.length!==o)return!1;if(l.length!==o)return!1;const u=Float64Array.BYTES_PER_ELEMENT,c=16,y=b._malloc(c+e*u),p=b._malloc(c+e*u),g=b._malloc(c+o*u),f=b._malloc(c+o*u),m=y+c-y%c,C=p+c-p%c,L=g+c-g%c,M=f+c-f%c;try{return b.HEAPF64.subarray(m>>3,(m>>3)+e).set(i),b.HEAPF64.subarray(C>>3,(C>>3)+e).set(n),b.HEAPF64.subarray(L>>3,(L>>3)+o).set(r),b.HEAPF64.subarray(M>>3,(M>>3)+o).set(l),b.applyChronologicalLayout(e,t,a,s,m,C,o,h,d,L,M)}finally{b._free(y),b._free(p),b._free(g),b._free(f)}}),e,t,a,s,o)}}(P||(P={})),function(e){e[e.Undirected=0]="Undirected",e[e.Directed=1]="Directed",e[e.Reversed=2]="Reversed"}(G||(G={})),function(e){e[e.ByCC_Raw=0]="ByCC_Raw",e[e.ByCC_NormalizeGlobally=1]="ByCC_NormalizeGlobally",e[e.ByCC_NormalizeByCC=2]="ByCC_NormalizeByCC"}(Z||(Z={}));var S=a(14476),U=a(76797),O=a(19247),H=a(23701);let B=class extends((0,C.dM)((0,L.j)(c.A))){constructor(e){if(super(e),this.dataPreloadedInLocalCache=!1,this.defaultLinkChartConfig=null,this._currentLinkChartConfig={layoutMode:"RADIAL_TREE"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new s.A,this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new U.A({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.sublayerIdsCache=new Map,this.tables=new s.A,this.type="link-chart",this._originalInclusionList=e.inclusionModeDefinition,e.dataPreloadedInLocalCache&&!e.inclusionModeDefinition)throw new o.A("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it")}normalizeCtorArgs(e){return{url:e.url,title:e.title,dataPreloadedInLocalCache:e.dataPreloadedInLocalCache,defaultLinkChartConfig:e.defaultLinkChartConfig}}_initializeLayerProperties(e){if(!this.title&&this.url){const e=this.url.split("/");this.title=e[e.length-2]}const t=new Set;let a=[],i=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new o.A("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.inclusionModeDefinition?.generateAllSublayers?(a=e.knowledgeGraph.dataModel.entityTypes??[],i=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((n,s)=>{const o=this._graphTypeLookup.get(s);if(!o)return r.A.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(s);"relationship"===o.type?t.has(s)||(t.add(s),i.push(o)):"entity"===o.type?t.has(s)||(t.add(s),a.push(o)):(r.A.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(s))})):(a=e.knowledgeGraph.dataModel.entityTypes??[],i=e.knowledgeGraph.dataModel.relationshipTypes??[]);const n=new g.PB({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=a,this.memberRelationshipTypes=i,this.dataManager=n}load(e){return this.addResolvingPromise(new Promise((t=>{(0,S.fetchKnowledgeGraph)(this.url).then((a=>{if(this._initializeLayerProperties({knowledgeGraph:a,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})})),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})}))),this.dataPreloadedInLocalCache)this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((e=>{e.useAllData=!1,e.members?.forEach((e=>{let t;t=e.linkChartLocation instanceof p.A?e.linkChartLocation:e.linkChartLocation?(0,y.Ux)(e.linkChartLocation):null,t&&2===t.coords.length&&0===t.lengths.length?this.entityLinkChartDiagramLookup.set(e.id,t):this.relationshipLinkChartDiagramLookup.set(e.id,t)})),this.addResolvingPromise(this._initializeDiagram().then((async()=>{this.layers.forEach((async e=>{await e.refreshCachedQueryEngine()})),this.tables.forEach((async e=>{await e.refreshCachedQueryEngine()}))})))}));else{const t="GEOGRAPHIC"===this.defaultLinkChartConfig?.layoutMode;this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,t,!0).then((async()=>{(0,h.Te)(e);const t=[],a=[];this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1,this.dataManager.inclusionModeDefinition.namedTypeDefinitions.forEach((e=>{e.useAllData=!1}))),await this._initializeDiagram(),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine()),t.push(new Promise((t=>{e.on("layerview-create",(()=>{t(null)}))})))})),this.tables.forEach((e=>{a.push(e.refreshCachedQueryEngine())})),await Promise.all(a)})))}t(null)}))}))),Promise.resolve(this)}async addRecords(e,t){let a=[];t?.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(a=await(0,m.aq)(e,this.dataManager.knowledgeGraph));const i=e.concat(a).filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));await this._handleNewRecords(i)}async removeRecords(e){let{cascadeRemoveRelationships:t=!0,recalculateLayout:a=!1}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{cascadeRemoveRelationships:!0,recalculateLayout:!1},i=[];for(const s of e)!1===this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(s.typeName)?.useAllData&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(s.typeName)?.members?.has(s.id)&&i.push(s);if(t){const e=new Set,t=[];for(const a of i)if(this.dataManager.nodeConnectionsLookup.has(a.id))for(const t of this.dataManager.nodeConnectionsLookup.get(a.id))e.add(t);for(const a of e)if(this.dataManager.memberIdTypeLookup.has(a))for(const e of this.dataManager.memberIdTypeLookup.get(a))this.dataManager.relationshipTypeNames.has(e)&&t.push({id:a,typeName:e});i=i.concat(t)}this.dataManager.removeFromLayer(i);for(const s of i)this.sublayerIdsCache.get(s.typeName)?.delete(s.id),this.dataManager.relationshipTypeNames.has(s.typeName)?this.relationshipLinkChartDiagramLookup.delete(s.id):this.entityLinkChartDiagramLookup.delete(s.id);a&&await this.calculateLinkChartLayout(this._currentLinkChartConfig.layoutMode,this._currentLinkChartConfig.layoutOptions);const n=[];return this.layers.forEach((e=>{n.push(e.refreshCachedQueryEngine())})),await Promise.all(n),this._refreshNamedTypes(),i}async expand(e,t){const a=await this.dataManager.getConnectedRecordIds(e,t),i=a.filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));return await this._handleNewRecords(a),{records:i}}loadLayerAssumingLocalCache(){this.memberRelationshipTypes.forEach((e=>{const t=new f.A({objectType:e,parentCompositeLayer:this,graphType:"relationship",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.memberEntityTypes.forEach((e=>{const t=new f.A({objectType:e,parentCompositeLayer:this,graphType:"entity",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{const a=(0,l.tE)(this.sublayerIdsCache,t,(()=>new Set));e.members?.forEach((e=>{if(a.add(e.id),e.linkChartLocation)if(e.linkChartLocation instanceof p.A)this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e.id,e.linkChartLocation):this.entityLinkChartDiagramLookup.set(e.id,e.linkChartLocation);else{const a=(0,y.Ux)(e.linkChartLocation);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e.id,e.linkChartLocation?a:null):this.entityLinkChartDiagramLookup.set(e.id,e.linkChartLocation?a:null)}}))}))}async calculateLinkChartLayout(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"RADIAL_TREE",t=arguments.length>1?arguments[1]:void 0;const a=[],i=[],n=[];this.dataManager.sublayerCaches.forEach(((e,t)=>{this.dataManager.entityTypeNames.has(t)?e.forEach((e=>{a.push({typeName:t,feature:e})})):this.dataManager.relationshipTypeNames.has(t)&&e.forEach((e=>{i.push({typeName:t,feature:e})}))})),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const s=new Map,l=new Map,h=new Map,d=new Map,u=new Uint8Array(a.length),c=new Float64Array(a.length),p=new Float64Array(a.length),f=new Uint32Array(i.length),m=new Uint32Array(i.length),C=[],L=new U.A({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let M,k="FORCE_DIRECTED",b=0,A=0;switch(k="GEOGRAPHIC"===e?"FORCE_DIRECTED":e,k){case"FORCE_DIRECTED":M=x.apply;break;case"COMMUNITY":M=v.apply;break;case"HIERARCHICAL":M=_.apply;break;case"RADIAL_TREE":M=R.apply;break;case"SMART_TREE":M=I.apply;break;default:M=N.apply}a.forEach((a=>{let{typeName:i,feature:n}=a;if(t?.lockedNodeLocations?.has(n.attributes[g.yC])){"GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(i)?u[b]=E.IsGeographic:u[b]=E.None;const a=t.lockedNodeLocations.get(n.attributes[g.yC]);c[b]=a.x,p[b]=a.y}else if("GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(i)){u[b]=E.IsGeographic;let e=null;const t=n.attributes[this.dataManager.geographicLookup.get(i).name],a=this.dataManager.geographicLookup.get(i)?.geometryType;switch(a){case"esriGeometryPoint":c[b]=t?.x,p[b]=t?.y;break;case"esriGeometryPolygon":e=t?.centroid,null!=e?.x&&null!=e?.y?(c[b]=e.x,p[b]=e.y):u[b]=E.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":e=t?.extent?.center,null!=e?.x&&null!=e?.y?(c[b]=e.x,p[b]=e.y):u[b]=E.IsMovable;break;default:u[b]=E.IsMovable}(null==c[b]||null==p[b]||Number.isNaN(c[b])||Number.isNaN(p[b]))&&(u[b]=E.IsMovable,c[b]=0,p[b]=0)}else u[b]=E.IsMovable,c[b]=0,p[b]=0;d.set(n.attributes[g.yC],b),C[b]={feature:n,typeName:i},b++}));let D=!1;const P=new Map;i.forEach((e=>{const t=e.feature.attributes[g.Vr],a=e.feature.attributes[g.ZL],i=d.get(t),s=d.get(a);if(void 0!==i&&void 0!==s){const o=t+"-"+a,r=P.get(o),l=r?.has(e.typeName);l||(f[A]=i,m[A]=s,void 0===r?P.set(o,new Map([[e.typeName,A]])):r.set(e.typeName,A),A++),n.push(e)}else D=!0,this.relationshipLinkChartDiagramLookup.set(t,null)})),D&&r.A.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const G=this._validateLayoutSettings(e,t),Z=this._convertLayoutSettingsToCalculationSettings(G);await w();const{success:S,links:B}=M(u,c,p,f.subarray(0,A),m.subarray(0,A),Z.computationBudgetTime,Z.idealEdgeLengthMultiplier,Z.repulsionRadiusMultiplier);if(!S)throw new o.A("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");for(let o=0;o<C.length;o++){if(p[o]>84.9999?p[o]=84.9999:p[o]<-84.9999&&(p[o]=-84.9999),c[o]>179.9999?c[o]=179.9999:c[o]<-179.9999&&(c[o]=-179.9999),C[o].feature.attributes[g.sZ]=new O.A(c[o],p[o]),s.has(C[o].typeName)){const e=s.get(C[o].typeName);e?.set(C[o].feature.attributes[g.yC],C[o].feature)}else{const e=new Map;e.set(C[o].feature.attributes[g.yC],C[o].feature),s.set(C[o].typeName,e)}h.set(C[o].feature.attributes[g.yC],C[o].feature);const e=(0,y.Ux)(C[o].feature.attributes[g.sZ]);this.entityLinkChartDiagramLookup.set(C[o].feature.attributes[g.yC],C[o].feature.attributes[g.sZ]?e:null),C[o].feature.attributes[g.sZ].x<L.xmin&&(L.xmin=C[o].feature.attributes[g.sZ].x),C[o].feature.attributes[g.sZ].x>L.xmax&&(L.xmax=C[o].feature.attributes[g.sZ].x),C[o].feature.attributes[g.sZ].y<L.ymin&&(L.ymin=C[o].feature.attributes[g.sZ].y),C[o].feature.attributes[g.sZ].y>L.ymax&&(L.ymax=C[o].feature.attributes[g.sZ].y)}if(this.linkChartExtent.xmin=L.xmin,this.linkChartExtent.xmax=L.xmax,this.linkChartExtent.ymin=L.ymin,this.linkChartExtent.ymax=L.ymax,!B)throw new o.A("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const F=new Map,z=new Map,V=new Map,j=new Set;for(let o=0;o<n.length;o++){const e=[],t=n[o],a=t.feature.attributes[g.Vr],i=t.feature.attributes[g.ZL],s=a+"-"+i,u=P.get(s).get(t.typeName),c=0===u?0:B?.vertexEndIndex[u-1];if(!j.has(u)){if(j.add(u),B.types[u]===T.Recursive){const t=[B.vertices[2*c],B.vertices[2*c+1]],a=[B.vertices[2*(c+1)],B.vertices[2*(c+1)+1]],i=[.5*(t[0]+a[0]),.5*(t[1]+a[1])],n=[i[0]-t[0],i[1]-t[1]],s=[i[0]+n[1],i[1]-n[0]],o=[i[0]-n[1],i[1]+n[0]];e.push(t),e.push(s),e.push(a),e.push(o),e.push(t)}else{if(B.types[u]!==T.Regular){r.A.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let t=c;t<B.vertexEndIndex[u];t++)e.push([B.vertices[2*t],B.vertices[2*t+1]])}const t=C[d.get(a)]?.feature.attributes[g.sZ],n=C[d.get(i)]?.feature.attributes[g.sZ];e[0][0]===t.x&&e[0][1]===t.y||(e[0]=[t.x,t.y]),e[e.length-1][0]===n.x&&e[e.length-1][1]===n.y||(e[e.length-1]=[n.x,n.y]);for(let a=1;a<e.length-1;a++)e[a][1]>85.5?e[a][1]=85.5:e[a][1]<-85.5&&(e[a][1]=-85.5),e[a][0]>179.9999?e[a][0]=179.9999:e[a][0]<-179.9999&&(e[a][0]=-179.9999);F.has(s)?F.get(s).push(e):F.set(s,[e])}const p=F.get(s);z.has(s)||(z.set(s,new Map),V.set(s,new Map));const f=z.get(s),m=V.get(s);f.has(t.typeName)||(f.set(t.typeName,p.shift()),m.set(t.typeName,0));const L=f.get(t.typeName);m.set(t.typeName,m.get(t.typeName)+1);const M=new H.A({paths:L});if(t.feature.attributes[g.sZ]=M,l.has(t.typeName)){const e=l.get(t.typeName);e?.set(t.feature.attributes[g.yC],t.feature)}else{const e=new Map;e.set(t.feature.attributes[g.yC],t.feature),l.set(t.typeName,e)}h.set(t.feature.attributes[g.yC],t.feature);const k=(0,y.Ux)(t.feature.attributes[g.sZ]);this.relationshipLinkChartDiagramLookup.set(t.feature.attributes[g.yC],t.feature.attributes[g.sZ]?k:null)}for(const o of n)o.feature.attributes[g.d4]=V.get(o.feature.attributes[g.Vr]+"-"+o.feature.attributes[g.ZL])?.get(o.typeName)??null;return this._currentLinkChartConfig={layoutMode:e,layoutOptions:G},{nodes:s,links:l,idMap:h}}async applyNewLinkChartLayout(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"RADIAL_TREE",t=arguments.length>1?arguments[1]:void 0;const a=[];await this.calculateLinkChartLayout(e,t),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine())})),await Promise.all(a),this._refreshNamedTypes()}getCurrentNodeLocations(){const e=new Map;return this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((t=>{t?.members?.forEach((t=>{const a=t.linkChartLocation;let i;const n=t.id;a&&(i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]},e.set(n,new O.A({x:i.x,y:i.y})))}))})),e}async synchronizeInclusionListWithCache(){return new Promise((e=>{this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{if(e.useAllData=!1,e.members&&e.members.size>0){if(!this.dataManager.sublayerCaches.get(t))return;const a=new Set(Array.from(this.dataManager.sublayerCaches.get(t).keys()));Array.from(e.members.keys()).filter((e=>!a.has(e))).forEach((t=>{e.members?.delete(t)}))}})),e()}))}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t),this._refreshNamedTypes()}async connectEntities(e){let t=[];for(const i of this.dataManager.relationshipTypeNames){const e=this.sublayerIdsCache.get(i);e&&(t=t.concat(Array.from(e.keys())))}const a=await this.dataManager.getAttachedRelationships(e,t);return await this._handleNewRecords(a),{records:a}}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const i of e)this.sublayerIdsCache.has(i.typeName)||(this.sublayerIdsCache.set(i.typeName,new Set),t.push(i.typeName)),this.sublayerIdsCache.get(i.typeName).add(i.id);for(const i of t){const e=this._graphTypeLookup.get(i);if(e){const t=new f.A({objectType:e,parentCompositeLayer:this,graphType:e.type,title:i});"entity"===e.type?this.dataManager.entityTypeNames.add(i):this.dataManager.relationshipTypeNames.add(i),t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.set(i,new Map)}}await this.dataManager.refreshCacheContent(e.map((e=>e.id)));const a=Object.assign({},this._currentLinkChartConfig.layoutOptions);a.lockedNodeLocations=this.getCurrentNodeLocations(),await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,a)}async _initializeDiagram(){this.defaultLinkChartConfig?this.defaultLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{e?.members?.forEach((e=>{const a=e.linkChartLocation;let i;const n=e.id;if(!a)return;i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]};const s=(0,y.Ux)(i);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(n,s):this.entityLinkChartDiagramLookup.set(n,s),this.linkChartExtent.xmin>i.x&&(this.linkChartExtent.xmin=i.x),this.linkChartExtent.xmax<i.x&&(this.linkChartExtent.xmax=i.x),this.linkChartExtent.ymin>i.y&&(this.linkChartExtent.ymin=i.y),this.linkChartExtent.ymax<i.y&&(this.linkChartExtent.ymax=i.y)}))})),this.memberRelationshipTypes.forEach((e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach((e=>{const t=this.relationshipLinkChartDiagramLookup.get(e.attributes[g.Vr]),a=this.relationshipLinkChartDiagramLookup.get(e.attributes[g.ZL]);if(t&&a){const i=(0,y.Ux)(new H.A({paths:[[t.coords[0],t.coords[1]],[a.coords[0],a.coords[1]]]}));this.relationshipLinkChartDiagramLookup.set(e.attributes[g.yC],i)}else this.relationshipLinkChartDiagramLookup.set(e.attributes[g.yC],null)}))}))):await this.calculateLinkChartLayout(this.defaultLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.defaultLinkChartConfig.layoutOptions||{}}):await this.calculateLinkChartLayout("RADIAL_TREE",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}_validateLayoutSettings(e,t){const a=e=>"number"==typeof e&&!isNaN(e),n=new Set(["FORCE_DIRECTED","COMMUNITY","GEOGRAPHIC"]),s={};if(!n.has(e)||!t)return!n.has(e)&&t&&r.A.getLogger(this).warn("Layout mode options were given for a layout mode that does not utilize them, settings will be ignored"),s;const{computationBudgetTime:o,repulsionRadiusMultiplier:l,idealEdgeLength:h,idealEdgeLengthType:d}=t;(e=>a(e)&&e>=1)(o)?s.computationBudgetTime=o:void 0!==o&&r.A.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),(e=>a(e)&&e>=1)(l)?s.repulsionRadiusMultiplier=l:void 0!==l&&r.A.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting");const u=void 0!==h||void 0!==d;return"GEOGRAPHIC"!==e&&u?r.A.getLogger(this).warn("Ideal edge length settings were specified for an incompatible layout mode, and will be ignored"):"GEOGRAPHIC"===e&&u&&((e=>Object.values(i).includes(e))(d)?s.idealEdgeLengthType=d:void 0!==d&&r.A.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),(e=>a(e)&&e>=0)(h)?s.idealEdgeLength=h:void 0!==h&&r.A.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),s}_convertLayoutSettingsToCalculationSettings(e){let t=e.idealEdgeLength;return e.idealEdgeLengthType===i.ABSOLUTE&&(void 0===t?t=-1:t*=-1),{computationBudgetTime:e.computationBudgetTime,repulsionRadiusMultiplier:e.repulsionRadiusMultiplier,idealEdgeLengthMultiplier:t}}};(0,n._)([(0,d.MZ)()],B.prototype,"dataPreloadedInLocalCache",void 0),(0,n._)([(0,d.MZ)()],B.prototype,"defaultLinkChartConfig",void 0),(0,n._)([(0,d.MZ)()],B.prototype,"dataManager",void 0),(0,n._)([(0,d.MZ)()],B.prototype,"knowledgeGraph",void 0),(0,n._)([(0,d.MZ)()],B.prototype,"layers",void 0),(0,n._)([(0,d.MZ)()],B.prototype,"entityLinkChartDiagramLookup",void 0),(0,n._)([(0,d.MZ)()],B.prototype,"relationshipLinkChartDiagramLookup",void 0),(0,n._)([(0,d.MZ)()],B.prototype,"linkChartExtent",void 0),(0,n._)([(0,d.MZ)()],B.prototype,"memberEntityTypes",void 0),(0,n._)([(0,d.MZ)()],B.prototype,"memberRelationshipTypes",void 0),(0,n._)([(0,d.MZ)()],B.prototype,"sublayerIdsCache",void 0),(0,n._)([(0,d.MZ)()],B.prototype,"tables",void 0),(0,n._)([(0,d.MZ)({json:{read:!1}})],B.prototype,"type",void 0),B=(0,n._)([(0,u.$)("esri.layers.LinkChartLayer")],B);const F=B}}]);
//# sourceMappingURL=2218.3d1fdbf1.chunk.js.map